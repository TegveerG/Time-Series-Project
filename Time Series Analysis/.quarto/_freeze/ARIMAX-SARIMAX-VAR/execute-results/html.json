{
  "hash": "71f799881e39cdb6cef397edd8f78132",
  "result": {
    "markdown": "---\ntitle: \"ARIMAX/SARIMAX/VAR Models\"\nformat:\n  html:\n    page-layout: full\n    code-fold: show\n    code-copy: true\n    code-tools: true\n    code-overflow: wrap\nbibliography: bibliography.bib\n---\n\n\n## Summary\n\nIn the previous ARIMA/SARIMA modeling section, we analyzed a univariate time series of monthly terrorist attacks in the US that occurred from 1970 to 2020. Although the SARIMA model performed better than the ARIMA model, due to the added seasonal Moving Average term, we can gauge our understanding of the monthly terrorist attacks better by including __endogenous variables__! Endogenous variables are those that are determined within the system being studied and are influenced by other variables in the system. These variables are typically modeled as being interdependent and are affected by changes in the values of other variables. In the case of terrorist attacks and casualties suffered from them, potential endogenous variables could include USA military expenditure, non-immigrant admissions data, and the performance of major weapons contracts, including Lockheed Martin, Boeing, and Raytheon Technologies. With the help of a literature review, it can be reinforced thoroughly and plausibly that the aforementioned endogenous variables have, in fact, not only been employed but also found to have effects related to terrorism in prior research.\n\n## Literature Review {#Lit}\n\nThe Stimson Study Group's Report on Counterterrorism Spending [@stimson2018counterterroism] in the post-9/11 era provides valuable insights into the amount of resources the United States devotes to counterterrorism efforts. The report found that the US government spent over USD2.8 trillion on counterterrorism efforts from 2002 to 2017, which represents a significant portion of the country's overall military budget during that period. Specifically, the report notes that counterterrorism spending accounted for 17% to 23% of the US defense budget each year between 2002 and 2017. Hartung (2021) [@hartung_2021] found that the \"Global War on Terror\", which emerged in the early 2000s as a result of the 9/11 attacks, had a significant impact on the political environment, resulting in a surge in the Pentagon's budget, the largest component of the US military budget. This increased funding was largely directed towards __military contractors, Lockheed Martin, Boeing, General Dynamics, Raytheon Technologies, and Northrop Grumman__, who were enlisted to aid in the efforts. Since Fiscal Year 2001, the total expenditures of the Pentagon for all purposes have surpassed USD14.1 trillion (measured in 2021 dollars). Out of this sum, USD4.4 trillion was used for weapons procurement and research and development (R&D), which mainly benefited corporate contractors. __The rest of the funds were utilized for__ paying and providing benefits to military and civilian personnel and other expenses, necessary for __operating and maintaining the United States military__. Congressional Research Service (CRS) estimates that in FY2020, the spending for contractors grew to \\$420 billion - well over half of the total Pentagon budget. Therefore, the biggest financial beneficiaries of the post-9/11 military spending surge have been the aforementioned weapons contractors.\n\nFurthermore, several papers have discussed and analyzed the relation between military spending or counterterrorism efforts with transnational terrorism prior to the 9/11 attacks. Li and Schaub (2004) [@LiandSchaub2004] employed *GOVCAPABILITY*, a control variable in their Pooled Time-Series Analysis , that comprised military manpower and military expenditures for 112 countries from 1975 to 1997. Because the variable captured state military and economic strength, it represented a proxy that the government could use for combating terrorism. Gaibulloev, K., Sandler, T., & Sul, D. (2014) [@gaibulloev_sandler_sul_2014] challenged extant literature about terrorism and its impact on economic growth that suffered from Nickell Bias, a type of bias that arises in statistical models when the independent variable is measured with error, and cross-sectional dependence, a statistical issue that arises in panel data analysis when the individual units (e.g., countries or firms) in the panel are not completely independent of one another. They mentioned that cross-sectional dependence is apt to affect other variables, such as democracy, threat, __military spending__, and financial measures. However, when Nickell bias and cross-sectional dependence are addressed, terrorism has no influence whatsoever on economic growth.\n\nTherefore, the perused literature about counterterrorism and military spending underscores the importance of counterterrorism efforts, including funding weapons contractors, in shaping the country's military spending priorities, particularly in the wake of the 9/11 terrorist attacks. By highlighting the amount of resources devoted to counterterrorism, these reports and papers help us understand how the overall US budget and military budget are allocated and the policy decisions that drive those allocations. However, it might also possible that during the VAR model building phase of this section, we find that military spending may not be a significant indicator of the number of casualties stemming from terrorist attacks in the Global Terrorism Database™ (GTD) [@GTD].\n\nSecondly, Nowrasteh (2019) [@nowrasteh_2019] found, by carefully analyzing the GTD, that the chance of being murdered by a tourist on a B visa, the most common tourist visa, is about 1 in 4.1 million per year. Compared to foreign‐born terrorists, the chance of being murdered by a native‐born terrorist is about 1 in 28 million per year. Moreover, there were 192 foreign‐born terrorists, relative to the 788 native-born terrorists, who planned, attempted, or carried out attacks on U.S. soil from 1975 through 2017. Through a cost-benefit risk analysis, it was also found that the combined human, property, business, and economic costs of terrorism from 1975 through 2017 are estimated at USD216.58 billion. Spread over 43 years, the average annual cost of terrorism is USD5.04 billion, which is about one‐hundredth the minimum estimated yearly benefit of USD553.9 billion from immigration and tourism. __Therefore, foreign‐born terrorism on U.S. soil is a low‐probability event that imposes high costs on its victims, despite relatively small risks.__\n\n## VAR Model Justification\n\nUsing a VAR model over an ARIMAX model for this research has a multitude of benefits, including:\n\n-   Simultaneous modeling of multivariate time series: VAR allows for the simultaneous modeling of multiple endogenous variables, whereas ARIMAX (Autoregressive Integrated Moving Average with Explanatory Variables) can only model one dependent variable at a time. This means that VAR can capture the complex relationships between multiple variables that may be influencing each other.\n\n-   Better handling of lags: VAR can handle multiple lags in the data more efficiently than ARIMAX. This is important in the case of studying the impact of terrorist attacks, as the effects of a single attack may persist over a longer period of time and may have delayed impacts on different variables.\n\n-   More robust to missing data: VAR can handle missing data more effectively than ARIMAX, as it does not require the same level of complete data in order to estimate the model parameters. This is particularly relevant in the case of studying the impact of terrorist attacks, as data may be missing or incomplete for certain variables in certain time periods.\n\n-   Better captures dynamic relationships: VAR is better suited for capturing the dynamic relationships between variables over time, whereas ARIMAX can only capture the static relationships between variables at a particular point in time. This is important in the case of studying the impact of terrorist attacks, as the relationships between variables may change over time due to factors such as changes in government policies or public opinion.\n\n-   No clear seasonality: Another reason why the VAR model is justified is that there may not be a clear seasonality pattern in the data related to terrorist attacks. This means that traditional time-series models may not be effective in capturing the complex relationships between the variables. The VAR model, on the other hand, does not rely on a specific seasonal pattern and can account for the complex relationships between variables without requiring seasonal adjustments. Moreover, the data that will be analyzed is aggregated yearly from 1970 to 2020, which makes it more difficult to identify and capture seasonal patterns. Yearly data may also be influenced by other factors that are not related to seasonality, such as long-term trends or cyclical patterns, that occur over longer periods of time. This can make it more challenging to distinguish between seasonal effects and other underlying factors that may be driving the data.\n\n-   Non-linearity: The relationships between variables in the case of terrorist attacks may not be linear, and traditional linear models may not be able to capture the non-linear effects. The VAR model is capable of modeling non-linear relationships between variables and can account for the complex interactions that may exist between them.\n\n## Methodology\n\nGiven the discussed Literature Review above, we shall divide our analysis into two segments, with VAR and ARIMAX models applied to both. __The first segment shall forecast the number of terrorist attacks in the US using all the data available, from 1970-2020, and the second segment shall forecast the number of terrorist attacks in the US using only Post-9/11 attacks data, from 2001-2020.__ The reason 2001 is included is to ensure that the analysis captures the full impact of the 9/11 attacks, immediately before and after it, on terrorist activity in the US.\n\nAnother important differentiator between both VAR models and ARIMAX models is that only the ARIMAX models shall account for all variables collected for the project, including Non-Immigrant Entrants data from the Department of Homeland Security. This is because, as per the literature review, tourism, which is generalized to foreign-born terrorists in this analysis, does not seem to have a significant impact on the likelihood of terrorist attacks on U.S. soil, compared to overall US Military Expenditure. Therefore, this section will help us prove whether the non-immigration variables have a significant effect on the yearly number of terrorist attacks in the US.\n\nFollowing graphs shall help make sense of the roadmap that follows in this analysis:\n\n![](multivariate_seg1.png)\n\n\\\n&nbsp;\n\n<center><em>Multivariate Analysis (VAR and ARIMAX) Segment 1 Flow Chart</em></center>\n\n\\\n&nbsp;\n\n![](multivariate_seg2.png)\n\n\\\n&nbsp;\n\n<center><em>Multivariate Analysis (VAR and ARIMAX) Segment 2 Flow Chart</em></center>\n\n\\\n&nbsp;\n\n## Building the VAR Model (1970-2020: Pre and Post-9/11 Attacks)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Time Series Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.ts(var_ts , main = \"\", xlab = \"\")\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/tsplots-1.png){width=672}\n:::\n:::\n\n\n### Pair Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create scatterplot matrix using plotly\nfig <- plot_ly(\n  data = as.data.frame(var_ts),\n  type = \"splom\",\n  diagonal = list(visible = FALSE),\n  dimensions = list(\n    list(label = \"# Attacks\", values = ~num_attacks),\n    list(label = \"B-2 Visa\", values = ~Pleasure),\n    list(label = \"B-1 Visa\", values = ~Business),\n    list(label = \"F-1 Visa\", values = ~Students),\n    list(label = \"Military Exp\", values = ~milexp.gdp),\n    list(label = \"RTX\", values = ~RTX)\n  )\n) %>%\n  layout(hovermode = \"x\")\n\n\n\n# customize layout\nfig <- fig %>% \n  layout(\n    title = \"Scatterplot Matrix of VAR Model Variables (Pre and Post-9/11)\",\n    xaxis = list(title = \"\"),\n    yaxis = list(title = \"\")\n  )\n\n# display plot\nfig\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-75fe2d6713e39eb4e312\" style=\"width:100%;height:928px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-75fe2d6713e39eb4e312\">{\"x\":{\"visdat\":{\"759e7da08a34\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"759e7da08a34\",\"attrs\":{\"759e7da08a34\":{\"diagonal\":{\"visible\":false},\"dimensions\":[{\"label\":\"# Attacks\",\"values\":{}},{\"label\":\"B-2 Visa\",\"values\":{}},{\"label\":\"B-1 Visa\",\"values\":{}},{\"label\":\"F-1 Visa\",\"values\":{}},{\"label\":\"Military Exp\",\"values\":{}},{\"label\":\"RTX\",\"values\":{}}],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"splom\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"hovermode\":\"x\",\"title\":\"Scatterplot Matrix of VAR Model Variables (Pre and Post-9/11)\",\"xaxis\":{\"title\":\"\"},\"yaxis\":{\"title\":\"\"},\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"diagonal\":{\"visible\":false},\"dimensions\":[{\"label\":\"# Attacks\",\"values\":[464,246,65,58,92,149,105,129,86,69,66,70,77,44,63,40,49,33,26,41,31,31,31,21,54,57,35,42,31,51,42,47,33,35,9,20,6,11,18,12,16,9,20,20,29,41,68,66,76,72,103]},{\"label\":\"B-2 Visa\",\"values\":[9515170,9515170,9515170,9515170,9515170,9515170,9515170,9515170,9515170,9515170,9515170,9515170,8788525,8061880,7335235,6608590,7985088.5,9361587,10738085.5,12114584,13418328,14618065,16440997,16918351,17154834,17611536,19110004,14312587,9515170,23643561,22335763.6666667,21027966.3333333,19720169,19981833,22653699,23701858,24788438,27486177,29442168,27800027,35131310,40578964,42025488,48346018,59784922,61017237,61029117,61600219,64819854,64864687,28731613]},{\"label\":\"B-1 Visa\",\"values\":[1135422,1135422,1135422,1135422,1135422,1135422,1135422,1135422,1135422,1135422,1135422,1135422,1300771.25,1466120.5,1631469.75,1796819,1985794,2174769,2363744,2552719,2661338,2616335,2788069,2961092,3164099,3275336,3770326,4077931,4385536,4554517,4486074.33333333,4417631.66666667,4349189,4198988,4576783,4684164,5030779,5418884,5603668,4390888,5205980,5694809,5705106,6299533,7734191,8008659,8290712,8456038,8967224,9059770,4209153]},{\"label\":\"F-1 Visa\",\"values\":[240805,240805,240805,240805,240805,240805,240805,240805,240805,240805,240805,240805,244871,248937,253003,257069,276402.25,295735.5,315068.75,334402,326264,343238,368686,370620,394001,364220,426903,512711.5,598520,641760,699953,741921,687506,662966,656373,663919,740724,841673,917373,951964,1595078,1788962,1653576,1669225,1837664,1990661,1991940,1940171,1957852,1907176,918442]},{\"label\":\"Military Exp\",\"values\":[0.0803274358404085,0.0694306960936061,0.0651975692434716,0.058938705911674,0.0595411119676015,0.0562267909613336,0.0519107142902555,0.0515561735127125,0.0494308724791688,0.0495199153527265,0.0515353746651636,0.0564654125624258,0.0681405709441284,0.0632114425976717,0.0623641652963897,0.064532192046686,0.0662652265789842,0.0642027402288488,0.060712777020948,0.0587120600804653,0.0560517529438794,0.0488342939776313,0.0497046680768284,0.0460435029507644,0.042152646751779,0.038602457917389,0.0355498220635218,0.0340556224418855,0.0320155849896996,0.0308567678324746,0.0311224214697679,0.0312380980266703,0.0344761809928778,0.0382716104473623,0.0401631273640692,0.0409003487632585,0.0404162723678969,0.040796550810522,0.0446382735629989,0.0488559968011478,0.0492264167706996,0.0484017399490274,0.0447740121867267,0.0404667887867098,0.0369589465026568,0.0347784516633609,0.0341346420823965,0.0330938753223376,0.0331115856059771,0.0342619487015821,0.0371788506411202]},{\"label\":\"RTX\",\"values\":[0.136338,0.125117,0.118484,0.111851,0.165332,0.245645,0.427321,0.468292666666667,0.509264333333333,0.550236,0.816227,0.585846,0.83992,1.000784,1.161648,1.437608,1.556818,1.182128,1.408983,1.635838,1.862693,2.194056,1.999997,2.664417,3.823936,4.983455,6.142974,6.861032,10.402697,12.579849,12.7098845,12.83992,12.490478,19.409138,21.493515,25.4813576666667,29.4692003333333,33.457043,23.925997,31.86618,37.020096,38.7639105,40.507725,57.465115,59.322578,50.751015,53.9815306666667,57.2120463333333,60.442562,86.929314,67.844963]}],\"type\":\"splom\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#gtd_dhs_sipri_rtx <- subset(gtd_dhs_sipri_rtx, select=-c(Business, Pleasure, Students))\n\n# convert df back to matrix\n\nts_matrix <- as.matrix(gtd_dhs_sipri_rtx[, 3:5])\n\n# convert the matrix to a time series object with a yearly frequency\nvar_ts <- ts(ts_matrix, frequency = 1,\n                 start = 1970)\n\n# split into train and test sets\n\nset.seed(29830)\ntrain_idx <- sample(nrow(var_ts), 0.9 * nrow(var_ts))\ntrain <- var_ts[train_idx, ]\ntest <- var_ts[-train_idx, ]\n\n# Fit Lasso regression model with cross-validation\n# cv_fit <- cv.glmnet(train[, 2], train[, 1], alpha = 1)\n# \n# # Extract selected variables\n# cv_fits <- as.data.frame(as.matrix(coef(cv_fit)))\n# to_include <- rownames(cv_fits)[cv_fits$s1 != 0]\n```\n:::\n\n\n### Fitting VAR Model\n\nHere we use the `VARselect()` function to find the best `p` to fit `VAR(p)`. We will choose a maximum lag of 10 and check which `p` value returns lowest AIC.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(var_result <- VARselect(var_ts, lag.max = 10, type = \"both\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$selection\nAIC(n)  HQ(n)  SC(n) FPE(n) \n    10     10      1     10 \n\n$criteria\n                  1            2            3            4            5\nAIC(n) 6.218555e+01 6.221758e+01 6.247328e+01 6.263055e+01 6.268341e+01\nHQ(n)  6.241384e+01 6.258284e+01 6.297552e+01 6.326976e+01 6.345959e+01\nSC(n)  6.281247e+01 6.322065e+01 6.385250e+01 6.438592e+01 6.481493e+01\nFPE(n) 1.019603e+27 1.065015e+27 1.410394e+27 1.727137e+27 1.960066e+27\n                  6            7            8            9           10\nAIC(n) 6.243987e+01 6.271077e+01 6.289237e+01 6.233062e+01 6.031548e+01\nHQ(n)  6.335303e+01 6.376089e+01 6.407947e+01 6.365469e+01 6.177652e+01\nSC(n)  6.494754e+01 6.559458e+01 6.615234e+01 6.596673e+01 6.432774e+01\nFPE(n) 1.719961e+27 2.666183e+27 4.086231e+27 3.345728e+27 7.729491e+26\n```\n:::\n:::\n\n\nNow, we will fit VAR(1), VAR(2), and VAR(3):\n\nVAR(1) output:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit <- VAR(var_ts, p=1, type=\"both\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nVAR Estimation Results:\n========================= \nEndogenous variables: num_attacks, Pleasure, Business \nDeterministic variables: both \nSample size: 50 \nLog Likelihood: -1772.497 \nRoots of the characteristic polynomial:\n0.8827 0.5279 0.2543\nCall:\nVAR(y = var_ts, p = 1, type = \"both\")\n\n\nEstimation results for equation num_attacks: \n============================================ \nnum_attacks = num_attacks.l1 + Pleasure.l1 + Business.l1 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)    \nnum_attacks.l1  3.087e-01  5.832e-02   5.294 3.44e-06 ***\nPleasure.l1     8.347e-07  5.901e-07   1.415 0.164038    \nBusiness.l1     1.238e-05  7.894e-06   1.568 0.123817    \nconst           6.014e+01  1.069e+01   5.625 1.12e-06 ***\ntrend          -3.400e+00  9.520e-01  -3.571 0.000861 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 20.62 on 45 degrees of freedom\nMultiple R-Squared: 0.7746,\tAdjusted R-squared: 0.7545 \nF-statistic: 38.66 on 4 and 45 DF,  p-value: 5.101e-14 \n\n\nEstimation results for equation Pleasure: \n========================================= \nPleasure = num_attacks.l1 + Pleasure.l1 + Business.l1 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)    \nnum_attacks.l1  7.069e+03  1.681e+04   0.421   0.6760    \nPleasure.l1     1.027e+00  1.700e-01   6.039 2.73e-07 ***\nBusiness.l1    -3.886e+00  2.275e+00  -1.708   0.0945 .  \nconst          -1.624e+06  3.081e+06  -0.527   0.6007    \ntrend           5.757e+05  2.744e+05   2.098   0.0415 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 5941000 on 45 degrees of freedom\nMultiple R-Squared: 0.8944,\tAdjusted R-squared: 0.885 \nF-statistic: 95.26 on 4 and 45 DF,  p-value: < 2.2e-16 \n\n\nEstimation results for equation Business: \n========================================= \nBusiness = num_attacks.l1 + Pleasure.l1 + Business.l1 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)  \nnum_attacks.l1  7.075e+02  2.103e+03   0.336   0.7381  \nPleasure.l1     2.125e-02  2.128e-02   0.999   0.3232  \nBusiness.l1     3.292e-01  2.847e-01   1.157   0.2535  \nconst          -8.672e+04  3.855e+05  -0.225   0.8230  \ntrend           7.894e+04  3.433e+04   2.299   0.0262 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 743400 on 45 degrees of freedom\nMultiple R-Squared: 0.9077,\tAdjusted R-squared: 0.8995 \nF-statistic: 110.6 on 4 and 45 DF,  p-value: < 2.2e-16 \n\n\n\nCovariance matrix of residuals:\n            num_attacks   Pleasure   Business\nnum_attacks         425 -1.755e+07 -2.952e+06\nPleasure      -17552819  3.530e+13  3.916e+12\nBusiness       -2952322  3.916e+12  5.527e+11\n\nCorrelation matrix of residuals:\n            num_attacks Pleasure Business\nnum_attacks      1.0000  -0.1433  -0.1926\nPleasure        -0.1433   1.0000   0.8865\nBusiness        -0.1926   0.8865   1.0000\n```\n:::\n:::\n\n\nVAR(2) output:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit <- VAR(var_ts, p=2, type=\"both\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nVAR Estimation Results:\n========================= \nEndogenous variables: num_attacks, Pleasure, Business \nDeterministic variables: both \nSample size: 49 \nLog Likelihood: -1719.76 \nRoots of the characteristic polynomial:\n0.8629 0.7233 0.7233 0.4716 0.4716 0.03415\nCall:\nVAR(y = var_ts, p = 2, type = \"both\")\n\n\nEstimation results for equation num_attacks: \n============================================ \nnum_attacks = num_attacks.l1 + Pleasure.l1 + Business.l1 + num_attacks.l2 + Pleasure.l2 + Business.l2 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)    \nnum_attacks.l1  2.669e-01  1.141e-01   2.338 0.024333 *  \nPleasure.l1     1.513e-07  8.588e-07   0.176 0.861004    \nBusiness.l1     6.099e-06  8.841e-06   0.690 0.494203    \nnum_attacks.l2 -2.348e-01  5.596e-02  -4.196 0.000142 ***\nPleasure.l2     1.114e-06  9.178e-07   1.214 0.231616    \nBusiness.l2     1.446e-05  8.930e-06   1.619 0.113127    \nconst           9.813e+01  1.136e+01   8.642 8.86e-11 ***\ntrend          -5.585e+00  8.663e-01  -6.447 1.00e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 15.33 on 41 degrees of freedom\nMultiple R-Squared: 0.7942,\tAdjusted R-squared: 0.7591 \nF-statistic:  22.6 on 7 and 41 DF,  p-value: 3.428e-12 \n\n\nEstimation results for equation Pleasure: \n========================================= \nPleasure = num_attacks.l1 + Pleasure.l1 + Business.l1 + num_attacks.l2 + Pleasure.l2 + Business.l2 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)   \nnum_attacks.l1 -1.154e+04  4.545e+04  -0.254  0.80090   \nPleasure.l1     1.086e+00  3.419e-01   3.175  0.00284 **\nBusiness.l1    -1.374e+00  3.520e+00  -0.390  0.69825   \nnum_attacks.l2  1.184e+04  2.228e+04   0.531  0.59808   \nPleasure.l2    -5.633e-02  3.654e-01  -0.154  0.87827   \nBusiness.l2    -2.950e+00  3.556e+00  -0.830  0.41156   \nconst          -1.615e+06  4.521e+06  -0.357  0.72284   \ntrend           6.223e+05  3.449e+05   1.804  0.07856 . \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 6103000 on 41 degrees of freedom\nMultiple R-Squared: 0.8972,\tAdjusted R-squared: 0.8797 \nF-statistic: 51.13 on 7 and 41 DF,  p-value: < 2.2e-16 \n\n\nEstimation results for equation Business: \n========================================= \nBusiness = num_attacks.l1 + Pleasure.l1 + Business.l1 + num_attacks.l2 + Pleasure.l2 + Business.l2 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)  \nnum_attacks.l1 -4.733e+02  5.638e+03  -0.084   0.9335  \nPleasure.l1     2.071e-02  4.242e-02   0.488   0.6279  \nBusiness.l1     7.792e-01  4.367e-01   1.784   0.0818 .\nnum_attacks.l2  1.007e+03  2.764e+03   0.364   0.7175  \nPleasure.l2     1.762e-03  4.534e-02   0.039   0.9692  \nBusiness.l2    -5.502e-01  4.411e-01  -1.247   0.2194  \nconst          -1.522e+05  5.609e+05  -0.271   0.7875  \ntrend           9.085e+04  4.279e+04   2.123   0.0398 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 757100 on 41 degrees of freedom\nMultiple R-Squared: 0.9105,\tAdjusted R-squared: 0.8952 \nF-statistic: 59.57 on 7 and 41 DF,  p-value: < 2.2e-16 \n\n\n\nCovariance matrix of residuals:\n            num_attacks   Pleasure   Business\nnum_attacks   2.349e+02 -1.161e+07 -2.274e+06\nPleasure     -1.161e+07  3.725e+13  4.082e+12\nBusiness     -2.274e+06  4.082e+12  5.732e+11\n\nCorrelation matrix of residuals:\n            num_attacks Pleasure Business\nnum_attacks      1.0000  -0.1242  -0.1960\nPleasure        -0.1242   1.0000   0.8834\nBusiness        -0.1960   0.8834   1.0000\n```\n:::\n:::\n\n\nVAR(3) output:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit <- VAR(var_ts, p=3, type=\"both\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nVAR Estimation Results:\n========================= \nEndogenous variables: num_attacks, Pleasure, Business \nDeterministic variables: both \nSample size: 48 \nLog Likelihood: -1677.209 \nRoots of the characteristic polynomial:\n0.9075 0.8361 0.8361 0.6494 0.5669 0.5669 0.4691 0.4691 0.1478\nCall:\nVAR(y = var_ts, p = 3, type = \"both\")\n\n\nEstimation results for equation num_attacks: \n============================================ \nnum_attacks = num_attacks.l1 + Pleasure.l1 + Business.l1 + num_attacks.l2 + Pleasure.l2 + Business.l2 + num_attacks.l3 + Pleasure.l3 + Business.l3 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)    \nnum_attacks.l1  3.398e-02  1.467e-01   0.232   0.8181    \nPleasure.l1     5.179e-07  7.826e-07   0.662   0.5122    \nBusiness.l1     7.377e-06  8.045e-06   0.917   0.3651    \nnum_attacks.l2  8.679e-02  1.103e-01   0.787   0.4364    \nPleasure.l2     5.680e-07  1.068e-06   0.532   0.5979    \nBusiness.l2     1.079e-05  1.039e-05   1.038   0.3060    \nnum_attacks.l3 -2.066e-01  6.179e-02  -3.343   0.0019 ** \nPleasure.l3     2.518e-07  8.479e-07   0.297   0.7682    \nBusiness.l3     1.001e-05  8.376e-06   1.195   0.2396    \nconst           1.190e+02  1.888e+01   6.302 2.45e-07 ***\ntrend          -7.099e+00  1.179e+00  -6.020 5.91e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 13.74 on 37 degrees of freedom\nMultiple R-Squared:  0.85,\tAdjusted R-squared: 0.8094 \nF-statistic: 20.96 on 10 and 37 DF,  p-value: 2.511e-12 \n\n\nEstimation results for equation Pleasure: \n========================================= \nPleasure = num_attacks.l1 + Pleasure.l1 + Business.l1 + num_attacks.l2 + Pleasure.l2 + Business.l2 + num_attacks.l3 + Pleasure.l3 + Business.l3 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)   \nnum_attacks.l1 -3.438e+04  6.741e+04  -0.510  0.61304   \nPleasure.l1     1.084e+00  3.595e-01   3.014  0.00464 **\nBusiness.l1    -1.803e+00  3.696e+00  -0.488  0.62850   \nnum_attacks.l2 -1.503e+04  5.067e+04  -0.297  0.76846   \nPleasure.l2    -2.556e-01  4.904e-01  -0.521  0.60541   \nBusiness.l2    -2.352e+00  4.773e+00  -0.493  0.62507   \nnum_attacks.l3  4.440e+03  2.839e+04   0.156  0.87656   \nPleasure.l3     3.296e-01  3.895e-01   0.846  0.40291   \nBusiness.l3    -3.226e-01  3.848e+00  -0.084  0.93364   \nconst           2.443e+06  8.674e+06   0.282  0.77980   \ntrend           4.864e+05  5.418e+05   0.898  0.37513   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 6311000 on 37 degrees of freedom\nMultiple R-Squared: 0.8995,\tAdjusted R-squared: 0.8724 \nF-statistic: 33.12 on 10 and 37 DF,  p-value: 1.864e-15 \n\n\nEstimation results for equation Business: \n========================================= \nBusiness = num_attacks.l1 + Pleasure.l1 + Business.l1 + num_attacks.l2 + Pleasure.l2 + Business.l2 + num_attacks.l3 + Pleasure.l3 + Business.l3 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)\nnum_attacks.l1 -7.995e+02  8.425e+03  -0.095    0.925\nPleasure.l1     1.900e-02  4.493e-02   0.423    0.675\nBusiness.l1     7.341e-01  4.618e-01   1.590    0.120\nnum_attacks.l2 -2.755e+03  6.332e+03  -0.435    0.666\nPleasure.l2    -1.137e-02  6.129e-02  -0.186    0.854\nBusiness.l2    -4.329e-01  5.965e-01  -0.726    0.473\nnum_attacks.l3  1.477e+03  3.548e+03   0.416    0.680\nPleasure.l3     2.425e-02  4.868e-02   0.498    0.621\nBusiness.l3    -1.421e-01  4.809e-01  -0.296    0.769\nconst           1.754e+04  1.084e+06   0.016    0.987\ntrend           9.116e+04  6.771e+04   1.346    0.186\n\n\nResidual standard error: 788700 on 37 degrees of freedom\nMultiple R-Squared: 0.9098,\tAdjusted R-squared: 0.8855 \nF-statistic: 37.34 on 10 and 37 DF,  p-value: 2.617e-16 \n\n\n\nCovariance matrix of residuals:\n            num_attacks   Pleasure   Business\nnum_attacks   1.887e+02 -1.040e+07 -1.886e+06\nPleasure     -1.040e+07  3.983e+13  4.403e+12\nBusiness     -1.886e+06  4.403e+12  6.221e+11\n\nCorrelation matrix of residuals:\n            num_attacks Pleasure Business\nnum_attacks      1.0000  -0.1199  -0.1741\nPleasure        -0.1199   1.0000   0.8845\nBusiness        -0.1741   0.8845   1.0000\n```\n:::\n:::\n\n\n### K-Fold Cross Validation and Model Diagnostics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the number of folds for cross-validation\nk <- 5\n\n# Define the p values to test\np_values <- c(1, 2, 3)\n\n# Split the data into k folds\ncv_folds <- cut(seq(1, nrow(var_ts)), breaks = k, labels = FALSE)\n\n# Initialize vectors to store RMSE and AIC values for each p value\nrmse_vec <- numeric(length(p_values))\naic_vec <- numeric(length(p_values))\n\n# Loop over p values and perform cross-validation\nfor (i in seq_along(p_values)) {\n  p <- p_values[i]\n  rmse_cv <- numeric(k)\n  aic_cv <- numeric(k)\n  for (j in 1:k) {\n    # Split the data into training and testing sets\n    train <- var_ts[cv_folds != j, ]\n    test <- var_ts[cv_folds == j, ]\n    \n    # Fit the VAR model with the current p value\n    var_fit <- VAR(train, p = p)\n    \n    # Make predictions for the testing set\n    pred <- predict(var_fit, n.ahead = nrow(test))$fcst\n    \n    # Calculate RMSE and AIC for the current fold\n    rmse_cv[j] <- sqrt(mean((pred$num_attacks - test[,1])^2))\n    aic_cv[j] <- AIC(var_fit)\n  }\n  # Calculate the mean RMSE and AIC across all folds for the current p value\n  rmse_vec[i] <- mean(rmse_cv)\n  aic_vec[i] <- mean(aic_cv)\n}\n\n# Create a table of RMSE and AIC values for each p value\nresults_table <- tibble(p_values, rmse_vec, aic_vec)\n\n# Print the results table\nkable(results_table, format = \"markdown\", \n        col.names = c(\"P Values\", \"Mean RMSE (5 Folds)\", \"Mean AIC (5 Folds)\"), align = \"c\", digits = 2\n        )\n```\n\n::: {.cell-output-display}\n| P Values | Mean RMSE (5 Folds) | Mean AIC (5 Folds) |\n|:--------:|:-------------------:|:------------------:|\n|    1     |        69.41        |      2839.88       |\n|    2     |        95.77        |      2768.59       |\n|    3     |        90.21        |      2702.07       |\n:::\n:::\n\n\nThe `VAR(1)` model outputs the lowest Mean RMSE of 69.405026 attacks from the 5-fold cross validation. However, it has the highest AIC score. Because test set performance is best and it is the simplest model, we shall choose the `VAR(1)` model as the best option.\n\n### Forecasting Chosen Model (p=1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_var <- VAR(var_ts, p = 1)\n\n(fit.pr = predict(final_var, n.ahead = 5, ci = 0.95)) # 5 years ahead \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$num_attacks\n         fcst      lower    upper       CI\n[1,] 74.99198 29.7166120 120.2674 45.27537\n[2,] 62.51771 12.3013333 112.7341 50.21637\n[3,] 56.71276  4.5370981 108.8884 52.17566\n[4,] 53.80558  0.3106907 107.3005 53.49489\n[5,] 52.18705 -2.3286201 106.7027 54.51567\n\n$Pleasure\n         fcst    lower    upper       CI\n[1,] 28008600 15940797 40076403 12067803\n[2,] 27732679 11205503 44259856 16527177\n[3,] 27655150  8102498 47207803 19552652\n[4,] 27668361  5880296 49456426 21788065\n[5,] 27724860  4218078 51231642 23506782\n\n$Business\n        fcst   lower   upper      CI\n[1,] 4142849 2619394 5666304 1523455\n[2,] 4141639 2055830 6227448 2085809\n[3,] 4166222 1698565 6633879 2467657\n[4,] 4200017 1450247 6949786 2749770\n[5,] 4236079 1269647 7202511 2966432\n```\n:::\n\n```{.r .cell-code}\nfanchart(fit.pr) # plot prediction + error\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/forc2-1.png){width=672}\n:::\n:::\n\n\nThe above plot showcases the forecasts for each variable present in the `VAR(1)` model, `Number of Yearly Attacks`, `US Military Expenditure as a % of US GDP`, and Closing Price of `Raytheon Technologies Stock`. The predicted forecast, from the years 2021 to 2025, for `Number of Yearly Attacks` is a good sign for the US due to the decreasing and plateauing trend, although the actual observations from 2015 onward suggest an increasing trend. The same forecast trend is discerned for `US Military Expenditure as a % of US GDP`, with `Raytheon Technologies Stock` being the only variable with a predicted increasing trend.\n\nLet us visualize more closely the forecasts for the `Number of Yearly Attacks` from 2021 to 2025, corresponding to the VAR(1) model fitted on all years (1970-2020):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create df of attack forecasts\ndf_fvar_attack <- as.data.frame(fit.pr$fcst$num_attacks)\n# add year column\ndf_fvar_attack$Year <- c(\"2021\", \"2022\", \"2023\", \"2024\", \"2025\")\n(var_plot <- ggplot(data=df_fvar_attack, aes(x=Year, y=fcst, group = 1)) +\n    geom_line(aes(color=\"Forecast\"), linewidth=1) +\n    geom_ribbon(aes(ymin=lower, ymax=upper, fill=\"Confidence Interval\"), alpha=0.1) +\n    labs(title=\"VAR(1) Forecasts for Number of Yearly Attacks from 2021 to 2025\",\n         y=\"Number of Terrorist Attacks\",\n         color=\"\", fill=\"\",\n         caption=\"Data Sources: Global Terrorism Database, SIPRI Military Expenditure Database, Yahoo Finance\") +\n    scale_color_manual(values = c(\"Forecast\"=\"red\")) +\n    scale_fill_manual(values = c(\"95% Confidence Interval\"=\"steelblue\")) +\n    theme_minimal() + \n  theme(plot.caption.position = \"plot\"))\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/forcattacks2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggplotly(var_plot)\n```\n:::\n\n\n## Building the VAR Model (2001-2020: Post-9/11 Attacks)\n\n\n\n\n\n### Time Series Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.ts(var_ts , main = \"\", xlab = \"\")\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/tsplots2-1.png){width=672}\n:::\n:::\n\n\n### Pair Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create scatterplot matrix using plotly\nfig <- plot_ly(\n  data = as.data.frame(var_ts), \n  type = \"splom\",\n  diagonal = list(visible = FALSE),\n  dimensions = list(\n    list(label = \"# Attacks\", values = ~num_attacks),\n    list(label = \"Military Exp\", values = ~milexp.gdp),\n    list(label = \"RTX\", values = ~RTX),\n    list(label = \"LMT\", values = ~LMT)\n  )\n) %>%\n  layout(hovermode = \"x\")\n\nfig <- fig %>% \n  layout(\n    title = \"Scatterplot Matrix of VAR Model Variables (Post-9/11)\",\n    xaxis = list(title = \"\"),\n    yaxis = list(title = \"\")\n  )\n\n# display plot\nfig\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-ba226fd8a0e78da18f98\" style=\"width:100%;height:928px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ba226fd8a0e78da18f98\">{\"x\":{\"visdat\":{\"759e7122c943\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"759e7122c943\",\"attrs\":{\"759e7122c943\":{\"diagonal\":{\"visible\":false},\"dimensions\":[{\"label\":\"# Attacks\",\"values\":{}},{\"label\":\"Military Exp\",\"values\":{}},{\"label\":\"RTX\",\"values\":{}},{\"label\":\"LMT\",\"values\":{}}],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"splom\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"hovermode\":\"x\",\"title\":\"Scatterplot Matrix of VAR Model Variables (Post-9/11)\",\"xaxis\":{\"title\":\"\"},\"yaxis\":{\"title\":\"\"},\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"diagonal\":{\"visible\":false},\"dimensions\":[{\"label\":\"# Attacks\",\"values\":[47,33,35,9,20,6,11,18,12,16,9,20,20,29,41,68,66,76,72,103]},{\"label\":\"Military Exp\",\"values\":[0.0312380980266703,0.0344761809928778,0.0382716104473623,0.0401631273640692,0.0409003487632585,0.0404162723678969,0.040796550810522,0.0446382735629989,0.0488559968011478,0.0492264167706996,0.0484017399490274,0.0447740121867267,0.0404667887867098,0.0369589465026568,0.0347784516633609,0.0341346420823965,0.0330938753223376,0.0331115856059771,0.0342619487015821,0.0371788506411202]},{\"label\":\"RTX\",\"values\":[12.83992,12.490478,19.409138,21.493515,25.4813576666667,29.4692003333333,33.457043,23.925997,31.86618,37.020096,38.7639105,40.507725,57.465115,59.322578,50.751015,53.9815306666667,57.2120463333333,60.442562,86.929314,67.844963]},{\"label\":\"LMT\",\"values\":[26.779816,33.390778,30.08082,33.08585,43.9624303333333,54.8390106666667,65.715591,53.519119,49.459442,47.561493,58.0871695,68.612846,115.347717,154.290466,179.261841,197.47376,215.685679,233.897598,356.802948,333.634521]}],\"type\":\"splom\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Fitting VAR Model\n\nHere we use the `VARselect()` function to find the best `p` to fit `VAR(p)`. We will choose a maximum lag of 10 and check which `p` value returns lowest AIC.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(var_result <- VARselect(var_ts, lag.max = 10, type = \"both\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$selection\nAIC(n)  HQ(n)  SC(n) FPE(n) \n     2      2      2      3 \n\n$criteria\n                1    2    3    4    5    6    7    8    9   10\nAIC(n) -2.0240586 -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf\nHQ(n)  -2.8207028 -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf\nSC(n)  -1.2978543 -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf\nFPE(n)  0.2783486  NaN    0    0    0    0    0    0    0    0\n```\n:::\n:::\n\n\nNow, we will fit VAR(1), VAR(2), and VAR(3):\n\nVAR(1) output:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit <- VAR(var_ts, p=1, type=\"both\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nVAR Estimation Results:\n========================= \nEndogenous variables: num_attacks, milexp.gdp, RTX, LMT \nDeterministic variables: both \nSample size: 19 \nLog Likelihood: -88.384 \nRoots of the characteristic polynomial:\n0.9729 0.9729 0.294 0.294\nCall:\nVAR(y = var_ts, p = 1, type = \"both\")\n\n\nEstimation results for equation num_attacks: \n============================================ \nnum_attacks = num_attacks.l1 + milexp.gdp.l1 + RTX.l1 + LMT.l1 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)   \nnum_attacks.l1  1.595e-02  2.081e-01   0.077  0.94006   \nmilexp.gdp.l1  -1.081e+03  6.258e+02  -1.728  0.10764   \nRTX.l1         -7.065e-01  4.474e-01  -1.579  0.13830   \nLMT.l1          3.208e-01  9.775e-02   3.282  0.00595 **\nconst           5.678e+01  2.649e+01   2.144  0.05155 . \ntrend           1.292e+00  1.110e+00   1.164  0.26544   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 7.386 on 13 degrees of freedom\nMultiple R-Squared: 0.9508,\tAdjusted R-squared: 0.9319 \nF-statistic: 50.28 on 5 and 13 DF,  p-value: 4.759e-08 \n\n\nEstimation results for equation milexp.gdp: \n=========================================== \nmilexp.gdp = num_attacks.l1 + milexp.gdp.l1 + RTX.l1 + LMT.l1 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)    \nnum_attacks.l1 -1.634e-05  4.514e-05  -0.362  0.72313    \nmilexp.gdp.l1   1.173e+00  1.357e-01   8.642 9.51e-07 ***\nRTX.l1         -2.367e-04  9.703e-05  -2.439  0.02982 *  \nLMT.l1          7.978e-05  2.120e-05   3.763  0.00237 ** \nconst           8.972e-05  5.745e-03   0.016  0.98778    \ntrend          -4.702e-04  2.407e-04  -1.953  0.07269 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 0.001602 on 13 degrees of freedom\nMultiple R-Squared: 0.9358,\tAdjusted R-squared: 0.9111 \nF-statistic: 37.88 on 5 and 13 DF,  p-value: 2.648e-07 \n\n\nEstimation results for equation RTX: \n==================================== \nRTX = num_attacks.l1 + milexp.gdp.l1 + RTX.l1 + LMT.l1 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)   \nnum_attacks.l1    0.15927    0.20253   0.786  0.44574   \nmilexp.gdp.l1  -237.75906  609.01223  -0.390  0.70256   \nRTX.l1            0.25639    0.43534   0.589  0.56599   \nLMT.l1           -0.09915    0.09512  -1.042  0.31625   \nconst             9.74924   25.77580   0.378  0.71136   \ntrend             3.40135    1.08011   3.149  0.00769 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 7.187 on 13 degrees of freedom\nMultiple R-Squared: 0.901,\tAdjusted R-squared: 0.8629 \nF-statistic: 23.66 on 5 and 13 DF,  p-value: 4.196e-06 \n\n\nEstimation results for equation LMT: \n==================================== \nLMT = num_attacks.l1 + milexp.gdp.l1 + RTX.l1 + LMT.l1 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)  \nnum_attacks.l1     0.6765     0.7228   0.936   0.3664  \nmilexp.gdp.l1  -2954.0655  2173.5506  -1.359   0.1972  \nRTX.l1             0.6736     1.5537   0.434   0.6717  \nLMT.l1             0.2730     0.3395   0.804   0.4358  \nconst             71.2471    91.9932   0.774   0.4525  \ntrend              8.2020     3.8549   2.128   0.0531 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 25.65 on 13 degrees of freedom\nMultiple R-Squared: 0.9554,\tAdjusted R-squared: 0.9382 \nF-statistic: 55.66 on 5 and 13 DF,  p-value: 2.549e-08 \n\n\n\nCovariance matrix of residuals:\n            num_attacks milexp.gdp        RTX        LMT\nnum_attacks    54.55371 -2.410e-03 -14.602526 -62.659252\nmilexp.gdp     -0.00241  2.566e-06  -0.002115  -0.001013\nRTX           -14.60253 -2.115e-03  51.659389 167.723385\nLMT           -62.65925 -1.013e-03 167.723385 658.016441\n\nCorrelation matrix of residuals:\n            num_attacks milexp.gdp     RTX      LMT\nnum_attacks      1.0000   -0.20366 -0.2751 -0.33072\nmilexp.gdp      -0.2037    1.00000 -0.1837 -0.02465\nRTX             -0.2751   -0.18367  1.0000  0.90971\nLMT             -0.3307   -0.02465  0.9097  1.00000\n```\n:::\n:::\n\n\nVAR(2) output:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit <- VAR(var_ts, p=2, type=\"both\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nVAR Estimation Results:\n========================= \nEndogenous variables: num_attacks, milexp.gdp, RTX, LMT \nDeterministic variables: both \nSample size: 18 \nLog Likelihood: -53.372 \nRoots of the characteristic polynomial:\n 1.02 1.006 1.006 0.9265 0.7296 0.7296 0.7047 0.7047\nCall:\nVAR(y = var_ts, p = 2, type = \"both\")\n\n\nEstimation results for equation num_attacks: \n============================================ \nnum_attacks = num_attacks.l1 + milexp.gdp.l1 + RTX.l1 + LMT.l1 + num_attacks.l2 + milexp.gdp.l2 + RTX.l2 + LMT.l2 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)  \nnum_attacks.l1 -2.451e-01  2.616e-01  -0.937   0.3762  \nmilexp.gdp.l1  -5.577e+02  1.109e+03  -0.503   0.6287  \nRTX.l1         -1.690e+00  6.322e-01  -2.673   0.0282 *\nLMT.l1          5.662e-01  1.757e-01   3.223   0.0122 *\nnum_attacks.l2  3.234e-01  1.772e-01   1.825   0.1055  \nmilexp.gdp.l2  -1.465e+03  1.851e+03  -0.791   0.4516  \nRTX.l2          5.994e-02  5.480e-01   0.109   0.9156  \nLMT.l2         -5.252e-01  2.400e-01  -2.188   0.0601 .\nconst           8.362e+01  4.723e+01   1.770   0.1146  \ntrend           7.212e+00  3.296e+00   2.188   0.0601 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 5.75 on 8 degrees of freedom\nMultiple R-Squared: 0.9817,\tAdjusted R-squared: 0.961 \nF-statistic: 47.57 on 9 and 8 DF,  p-value: 5.404e-06 \n\n\nEstimation results for equation milexp.gdp: \n=========================================== \nmilexp.gdp = num_attacks.l1 + milexp.gdp.l1 + RTX.l1 + LMT.l1 + num_attacks.l2 + milexp.gdp.l2 + RTX.l2 + LMT.l2 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)    \nnum_attacks.l1 -5.792e-05  6.941e-05  -0.835 0.428209    \nmilexp.gdp.l1   1.632e+00  2.943e-01   5.546 0.000544 ***\nRTX.l1          1.623e-05  1.677e-04   0.097 0.925291    \nLMT.l1          7.586e-06  4.661e-05   0.163 0.874752    \nnum_attacks.l2 -3.381e-05  4.702e-05  -0.719 0.492632    \nmilexp.gdp.l2  -8.161e-01  4.912e-01  -1.662 0.135177    \nRTX.l2          2.335e-05  1.454e-04   0.161 0.876379    \nLMT.l2          3.700e-05  6.368e-05   0.581 0.577191    \nconst           9.377e-03  1.253e-02   0.748 0.475719    \ntrend          -4.351e-04  8.745e-04  -0.498 0.632216    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 0.001526 on 8 degrees of freedom\nMultiple R-Squared: 0.962,\tAdjusted R-squared: 0.9193 \nF-statistic: 22.51 on 9 and 8 DF,  p-value: 9.392e-05 \n\n\nEstimation results for equation RTX: \n==================================== \nRTX = num_attacks.l1 + milexp.gdp.l1 + RTX.l1 + LMT.l1 + num_attacks.l2 + milexp.gdp.l2 + RTX.l2 + LMT.l2 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)\nnum_attacks.l1  8.974e-02  3.673e-01   0.244    0.813\nmilexp.gdp.l1  -1.526e+03  1.558e+03  -0.979    0.356\nRTX.l1         -5.968e-02  8.877e-01  -0.067    0.948\nLMT.l1         -3.363e-02  2.467e-01  -0.136    0.895\nnum_attacks.l2  1.332e-01  2.488e-01   0.535    0.607\nmilexp.gdp.l2   1.441e+03  2.599e+03   0.554    0.595\nRTX.l2         -4.760e-01  7.694e-01  -0.619    0.553\nLMT.l2         -2.567e-03  3.370e-01  -0.008    0.994\nconst           1.431e+01  6.632e+01   0.216    0.835\ntrend           4.414e+00  4.628e+00   0.954    0.368\n\n\nResidual standard error: 8.074 on 8 degrees of freedom\nMultiple R-Squared: 0.9106,\tAdjusted R-squared:  0.81 \nF-statistic: 9.053 on 9 and 8 DF,  p-value: 0.002481 \n\n\nEstimation results for equation LMT: \n==================================== \nLMT = num_attacks.l1 + milexp.gdp.l1 + RTX.l1 + LMT.l1 + num_attacks.l2 + milexp.gdp.l2 + RTX.l2 + LMT.l2 + const + trend \n\n                 Estimate Std. Error t value Pr(>|t|)\nnum_attacks.l1  6.302e-01  1.391e+00   0.453    0.662\nmilexp.gdp.l1  -5.311e+03  5.897e+03  -0.901    0.394\nRTX.l1          1.946e+00  3.361e+00   0.579    0.578\nLMT.l1         -1.831e-01  9.339e-01  -0.196    0.849\nnum_attacks.l2  6.553e-01  9.422e-01   0.696    0.506\nmilexp.gdp.l2   5.310e+03  9.841e+03   0.540    0.604\nRTX.l2          5.094e-02  2.913e+00   0.017    0.986\nLMT.l2          8.553e-01  1.276e+00   0.670    0.522\nconst          -3.930e+01  2.511e+02  -0.157    0.880\ntrend          -1.058e+00  1.752e+01  -0.060    0.953\n\n\nResidual standard error: 30.57 on 8 degrees of freedom\nMultiple R-Squared: 0.9592,\tAdjusted R-squared: 0.9134 \nF-statistic: 20.91 on 9 and 8 DF,  p-value: 0.0001238 \n\n\n\nCovariance matrix of residuals:\n            num_attacks milexp.gdp        RTX        LMT\nnum_attacks   3.306e+01 -3.772e-04 -29.554209 -90.060020\nmilexp.gdp   -3.772e-04  2.327e-06   0.000433   0.002229\nRTX          -2.955e+01  4.330e-04  65.182414 239.325047\nLMT          -9.006e+01  2.229e-03 239.325047 934.380096\n\nCorrelation matrix of residuals:\n            num_attacks milexp.gdp      RTX      LMT\nnum_attacks      1.0000   -0.04300 -0.63666 -0.51242\nmilexp.gdp      -0.0430    1.00000  0.03515  0.04781\nRTX             -0.6367    0.03515  1.00000  0.96975\nLMT             -0.5124    0.04781  0.96975  1.00000\n```\n:::\n:::\n\n\nVAR(3) output: `System is computationally singular!`\n\n### K-Fold Cross Validation and Model Diagnostics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the number of folds for cross-validation\nk <- 5\n\n# Define the p values to test\np_values <- c(1, 2)\n\n# Split the data into k folds\ncv_folds <- cut(seq(1, nrow(var_ts)), breaks = k, labels = FALSE)\n\n# Initialize vectors to store RMSE and AIC values for each p value\nrmse_vec <- numeric(length(p_values))\naic_vec <- numeric(length(p_values))\n\n# Loop over p values and perform cross-validation\nfor (i in seq_along(p_values)) {\n  p <- p_values[i]\n  rmse_cv <- numeric(k)\n  aic_cv <- numeric(k)\n  for (j in 1:k) {\n    # Split the data into training and testing sets\n    train <- var_ts[cv_folds != j, ]\n    test <- var_ts[cv_folds == j, ]\n    \n    # Fit the VAR model with the current p value\n    var_fit <- VAR(train, p = p)\n    \n    # Make predictions for the testing set\n    pred <- predict(var_fit, n.ahead = nrow(test))$fcst\n    \n    # Calculate RMSE and AIC for the current fold\n    rmse_cv[j] <- sqrt(mean((pred$num_attacks - test[,1])^2))\n    aic_cv[j] <- AIC(var_fit)\n  }\n  # Calculate the mean RMSE and AIC across all folds for the current p value\n  rmse_vec[i] <- mean(rmse_cv)\n  aic_vec[i] <- mean(aic_cv)\n}\n\n# Create a table of RMSE and AIC values for each p value\nresults_table <- tibble(p_values, rmse_vec, aic_vec)\n\n# Print the results table\nkable(results_table, format = \"markdown\", \n        col.names = c(\"P Values\", \"Mean RMSE (5 Folds)\", \"Mean AIC (5 Folds)\"), align = \"c\", digits = 2\n        )\n```\n\n::: {.cell-output-display}\n| P Values | Mean RMSE (5 Folds) | Mean AIC (5 Folds) |\n|:--------:|:-------------------:|:------------------:|\n|    1     |        71.52        |       185.30       |\n|    2     |        99.81        |       146.72       |\n:::\n:::\n\n\nThe `VAR(1)` model outputs the lowest Mean RMSE of 71.5162107 attacks from the 5-fold cross validation. However, it has the highest AIC score. Because predictive performance is best and it is the simplest model, we shall choose the `VAR(1)` model as the best option.\n\n### Forecasting Chosen Model (p=1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_var <- VAR(var_ts, p = 1)\n\n(fit.pr = predict(final_var, n.ahead = 5, ci = 0.95)) # 5 years ahead \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$num_attacks\n         fcst    lower    upper       CI\n[1,] 106.4884 91.82993 121.1468 14.65844\n[2,] 105.5359 86.41872 124.6530 19.11715\n[3,] 109.0562 81.39160 136.7209 27.66465\n[4,] 118.1089 80.57594 155.6418 37.53294\n[5,] 131.7816 85.56976 177.9934 46.21181\n\n$milexp.gdp\n           fcst      lower      upper          CI\n[1,] 0.04196277 0.03852185 0.04540369 0.003440920\n[2,] 0.04459493 0.03773271 0.05145715 0.006862220\n[3,] 0.04512609 0.03559814 0.05465405 0.009527953\n[4,] 0.04433390 0.03338255 0.05528525 0.010951351\n[5,] 0.04302182 0.03156563 0.05447801 0.011456190\n\n$RTX\n         fcst    lower    upper       CI\n[1,]  78.4456 60.42230  96.4689 18.02330\n[2,]  92.8866 69.53195 116.2413 23.35465\n[3,] 106.4325 80.56025 132.3048 25.87226\n[4,] 118.4094 90.38182 146.4371 28.02763\n[5,] 129.3340 98.88812 159.7798 30.44585\n\n$LMT\n         fcst    lower    upper        CI\n[1,] 353.1119 296.8575 409.3663  56.25441\n[2,] 388.1265 301.4405 474.8124  86.68600\n[3,] 432.9755 319.8177 546.1334 113.15783\n[4,] 485.3377 348.8489 621.8265 136.48881\n[5,] 543.6910 385.6157 701.7663 158.07532\n```\n:::\n\n```{.r .cell-code}\nfanchart(fit.pr) # plot prediction + error\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/forc-1.png){width=672}\n:::\n:::\n\n\nThe above plot showcases the forecasts for each variable present in the `VAR(1)` model, `Number of Yearly Attacks`, `US Military Expenditure as a % of US GDP`, and Closing Price of `Raytheon Technologies Stock`. The predicted forecast, from the years 2021 to 2025, for `Number of Yearly Attacks` is a good sign for the US due to the decreasing and plateauing trend, although the latest observations from 2015 onwards suggest an increasing trend. The same forecasted trend is discerned for `US Military Expenditure as a % of US GDP`, with `Raytheon Technologies Stock` being the only variable with a predicted increasing trend.\n\nLet us visualize more closely the forecasts for the `Number of Yearly Attacks` from 2021 to 2025, corresponding to the VAR(1) model fitted on 9/11 and post-9/11 years (2001-2020):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create df of attack forecasts\ndf_fvar_attack <- as.data.frame(fit.pr$fcst$num_attacks)\n# add year column\ndf_fvar_attack$Year <- c(\"2021\", \"2022\", \"2023\", \"2024\", \"2025\")\n(var_plot <- ggplot(data=df_fvar_attack, aes(x=Year, y=fcst, group = 1)) +\n    geom_line(aes(color=\"Forecast\"), linewidth=1) +\n    geom_ribbon(aes(ymin=lower, ymax=upper, fill=\"Confidence Interval\"), alpha=0.1) +\n    labs(title=\"VAR(1) Forecasts for Number of Yearly Attacks from 2021 to 2025\",\n         y=\"Number of Terrorist Attacks\",\n         color=\"\", fill=\"\",\n         caption=\"Data Sources: Global Terrorism Database, SIPRI Military Expenditure Database, Yahoo Finance\") +\n    scale_color_manual(values = c(\"Forecast\"=\"red\")) +\n    scale_fill_manual(values = c(\"95% Confidence Interval\"=\"steelblue\")) +\n    theme_minimal() + \n  theme(plot.caption.position = \"plot\"))\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/forcattacks-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#ggplotly(var_plot)\n```\n:::\n\n\n## Manual ARIMAX Modeling (1970-2020: Pre and Post-9/11 Attacks)\n\nThe ARIMAX model being analyzed in this section is:\n\n<center>Number of yearly terrorist attacks in the US \\~ Number of yearly B-1 visa entrants + Number of yearly B-2 visa entrants + Number of yearly F-1 visa entrants + Yearly US Military Expenditure as Percentage of US GDP + Raytheon Technologies' Last Yearly Closing Price</center>\n\n\\\n&nbsp;\n\nIts output is as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngtd_USA_2 <- gtd %>% \n            filter(country_txt==\"United States\")\n\n# drop 33 observations from a total of 3121 observations (if taking for '70)\ngtd_USA_2 <- gtd_USA_2[complete.cases(gtd_USA_2$Date),]\n\n# impute missing values for nkill (Total Number of Fatalities: victims and attackers) as 0\n\ngtd_USA_2$nkill[is.na(gtd_USA_2$nkill)] <- 0\n\n# select desired columns for analysis (num_casualties ~ num_attacks, state, attack_type, weapon_type, victim_type, )\ngtd_USA_2 <- subset(gtd_USA_2, select=c(Date, nkill))\n\n# new dataframe for monthly number of attacks 1970-2020\ngtd_yearly_attacks_deaths <- gtd_USA_2 %>% \n              group_by(year(Date)) %>% \n                  summarise(nkill=sum(nkill),\n                            num_attacks = n())\n\ncolnames(gtd_yearly_attacks_deaths)[1] =\"Year\"\ncolnames(gtd_yearly_attacks_deaths)[2] =\"num_fatal\"\ncolnames(gtd_yearly_attacks_deaths)[3] =\"num_attacks\"\n\ngtd_yearly_attacks_deaths$Year <- as.Date(paste0(gtd_yearly_attacks_deaths$Year, \"-12-31\"))\n\n# Fill missing dates (0 attacks for those dates)\ngtd_yearly_attacks_deaths <- gtd_yearly_attacks_deaths %>% \n              complete(Year = seq.Date(min(Year), max(Year), by=\"year\")) \n\n# impute 28 ATTACKS in 1993 and 21 casualties in 1993 as per GTD\ngtd_yearly_attacks_deaths[24,2] <- 28\ngtd_yearly_attacks_deaths[24,3] <- 21\n\n# CLEAN DHS df\n## convert year to date time\ndhs$Year <- as.Date(paste(dhs$Year, \"-12-31\", sep = \"\"), format = \"%Y-%m-%d\")\n\n## subset\ndhs <- subset(dhs, select = c(Year, Temporaryvisitorsforpleasure, Temporaryvisitorsforbusiness, Students))\n\n# join with aggregated GTD df \ngtd_dhs <- merge(gtd_yearly_attacks_deaths, dhs, by = \"Year\", all.x = TRUE)\n\n# interpolate NAs in DHS columns (1970 to 1980, 1982 to 84, 86 to 88)\ngtd_dhs[,4] <- imputeTS::na.interpolation(gtd_dhs[,4])\ngtd_dhs[,5] <- imputeTS::na.interpolation(gtd_dhs[,5])\ngtd_dhs[,6] <- imputeTS::na.interpolation(gtd_dhs[,6])\n\n# join sipri dataset -> military expenditure as % of GDP\nmilexp.gdp <- sipri_gdp %>% filter(Country=='United States of America')\nmilexp.gdp <- melt(milexp.gdp, id.vars = 'Country', variable.name = 'Year', value.name = 'GDP') \nmilexp.gdp <- as.numeric(milexp.gdp[22:72, 3])\ngtd_dhs_sipri <- cbind(gtd_dhs, milexp.gdp) \n#gtd_dhs_sipri[32,2] <- 10 # subtracting 3004 number of casualties (9/11 attacks -> outlier event)\n#gtd_dhs_sipri[32,3] <- 43 # subtracting 4 attacks (9/11 attacks -> outlier event)\n\n# Collecting Raytheon Tech Stock Price (only one active since 70's)\n\noptions(\"getSymbols.warning4.0\"=FALSE)\noptions(\"getSymbols.yahoo.warning\"=FALSE)\n\ntickers = c(\"RTX\")\nfor (i in tickers){\n  getSymbols(i,\n             from = \"1970-01-01\",\n             to = \"2021-12-31\")}\n\nrtx <- data.frame(RTX$RTX.Adjusted)\n\nrtx <- data.frame(rtx,rownames(rtx))\ncolnames(rtx) <- append(tickers,'Dates')\n\nrtx$date<-as.Date(rtx$Dates,\"%Y-%m-%d\")\n\nrtx_yearly <- rtx %>% \n  filter(format(date, \"%m-%d\") == \"12-31\") %>% \n  group_by(Year=year(date)) %>% \n  summarise(RTX = last(RTX))\n\nrtx_yearly$Year <- as.Date(paste0(rtx_yearly$Year, \"-12-31\"))\n\n# Fill missing dates \nrtx_yearly <- rtx_yearly %>% \n              complete(Year = seq.Date(min(Year), max(Year), by=\"year\")) \n\nrtx_yearly$RTX <- imputeTS::na.interpolation(rtx_yearly$RTX)\n\n# final join to create final VAR dataset\n\ngtd_dhs_sipri_rtx <- cbind(gtd_dhs_sipri, rtx_yearly$RTX) \n\n# rename cols\n\ncolnames(gtd_dhs_sipri_rtx)[c(4, 5, 8)] <- c(\"Pleasure\", \"Business\", \"RTX\")\n\n# convert df to matrix\n\nts_matrix <- as.matrix(gtd_dhs_sipri_rtx[, 2:8])\n\n# convert the matrix to a time series object with a yearly frequency \nvar_ts <- ts(ts_matrix, frequency = 1,\n                 start = 1970)\n```\n:::\n\n\n### Regression Summary and Fitting ARIMA to Residuals\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.reg <- lm(num_attacks ~ . - num_fatal, data =var_ts)\nsummary(fit.reg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = num_attacks ~ . - num_fatal, data = var_ts)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-58.34 -38.63 -18.22  28.38 310.69 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)  \n(Intercept) -4.073e+01  8.203e+01  -0.497   0.6219  \nPleasure     4.791e-06  2.642e-06   1.813   0.0764 .\nBusiness    -1.831e-05  1.605e-05  -1.141   0.2599  \nStudents    -8.834e-05  6.736e-05  -1.311   0.1964  \nmilexp.gdp   2.371e+03  1.216e+03   1.950   0.0574 .\nRTX          5.734e-01  1.076e+00   0.533   0.5968  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 62.47 on 45 degrees of freedom\nMultiple R-squared:  0.299,\tAdjusted R-squared:  0.2211 \nF-statistic: 3.839 on 5 and 45 DF,  p-value: 0.005556\n```\n:::\n\n```{.r .cell-code}\nres.fit<-ts(residuals(fit.reg),star=decimal_date(as.Date(\"1970-01-01\",format = \"%Y-%m-%d\")),frequency = 1)\n\n############## Then look at the residuals ############\nres.fit %>% ggtsdisplay() # no need to difference\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/fitregcval-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#q=1,3 Q=1 , p=1,2, P=1,2\n#write a funtion\nSARIMA.c=function(p1,p2,q1,q2,P1,P2,Q1,Q2,d1,d2,data){\n  \n  temp=c()\n  d=0\n  D=0\n  s=12\n  \n  i=1\n  temp= data.frame()\n  ls=matrix(rep(NA,9*44),nrow=44)\n  \n  \n  for (p in p1:p2)\n  {\n    for(q in q1:q2)\n    {\n      for(P in P1:P2)\n      {\n        for(Q in Q1:Q2)\n        {\n          for(d in d1:d2)\n       \n        {\n          if(p+d+q+P+D+Q<=8)\n          {\n            \n            model<- Arima(data,order=c(p-1,d,q-1),seasonal=c(P-1,D,Q-1))\n            ls[i,]= c(p-1,d,q-1,P-1,D,Q-1,model$aic,model$bic,model$aicc)\n            i=i+1\n            #print(i)\n            \n          }\n          \n        }\n      }\n    }\n    \n  }\n  \n  }\n  temp= as.data.frame(ls)\n  names(temp)= c(\"p\",\"d\",\"q\",\"P\",\"D\",\"Q\",\"AIC\",\"BIC\",\"AICc\")\n  \n  temp\n  \n}\n\n##q=1,3 Q=0 p=1,2 P=0 d=0\n\noutput=SARIMA.c(p1=1,p2=3,q1=1,q2=4,P1=1,P2=3,Q1=1,Q2=2,d1=0,d2=0,data=res.fit)\noutput\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   p d q P D Q      AIC      BIC     AICc\n1  0 0 0 0 0 0 564.0890 567.9527 564.3390\n2  0 0 0 0 0 1 564.0890 567.9527 564.3390\n3  0 0 0 1 0 0 564.0890 567.9527 564.3390\n4  0 0 0 1 0 1 564.0890 567.9527 564.3390\n5  0 0 0 2 0 0 564.0890 567.9527 564.3390\n6  0 0 0 2 0 1 564.0890 567.9527 564.3390\n7  0 0 1 0 0 0 536.4054 542.2008 536.9160\n8  0 0 1 0 0 1 536.4054 542.2008 536.9160\n9  0 0 1 1 0 0 536.4054 542.2008 536.9160\n10 0 0 1 1 0 1 536.4054 542.2008 536.9160\n11 0 0 1 2 0 0 536.4054 542.2008 536.9160\n12 0 0 1 2 0 1 536.4054 542.2008 536.9160\n13 0 0 2 0 0 0 529.5765 537.3038 530.4461\n14 0 0 2 0 0 1 529.5765 537.3038 530.4461\n15 0 0 2 1 0 0 529.5765 537.3038 530.4461\n16 0 0 2 1 0 1 529.5765 537.3038 530.4461\n17 0 0 2 2 0 0 529.5765 537.3038 530.4461\n18 0 0 3 0 0 0 525.4438 535.1029 526.7771\n19 0 0 3 0 0 1 525.4438 535.1029 526.7771\n20 0 0 3 1 0 0 525.4438 535.1029 526.7771\n21 1 0 0 0 0 0 535.4053 541.2008 535.9160\n22 1 0 0 0 0 1 535.4053 541.2008 535.9160\n23 1 0 0 1 0 0 535.4053 541.2008 535.9160\n24 1 0 0 1 0 1 535.4053 541.2008 535.9160\n25 1 0 0 2 0 0 535.4053 541.2008 535.9160\n26 1 0 0 2 0 1 535.4053 541.2008 535.9160\n27 1 0 1 0 0 0 528.7138 536.4411 529.5834\n28 1 0 1 0 0 1 528.7138 536.4411 529.5834\n29 1 0 1 1 0 0 528.7138 536.4411 529.5834\n30 1 0 1 1 0 1 528.7138 536.4411 529.5834\n31 1 0 1 2 0 0 528.7138 536.4411 529.5834\n32 1 0 2 0 0 0 525.8292 535.4883 527.1625\n33 1 0 2 0 0 1 525.8292 535.4883 527.1625\n34 1 0 2 1 0 0 525.8292 535.4883 527.1625\n35 1 0 3 0 0 0 527.4145 539.0055 529.3236\n36 2 0 0 0 0 0 525.9075 533.6348 526.7771\n37 2 0 0 0 0 1 525.9075 533.6348 526.7771\n38 2 0 0 1 0 0 525.9075 533.6348 526.7771\n39 2 0 0 1 0 1 525.9075 533.6348 526.7771\n40 2 0 0 2 0 0 525.9075 533.6348 526.7771\n41 2 0 1 0 0 0 527.8172 537.4764 529.1506\n42 2 0 1 0 0 1 527.8172 537.4764 529.1506\n43 2 0 1 1 0 0 527.8172 537.4764 529.1506\n44 2 0 2 0 0 0 527.3804 538.9713 529.2895\n```\n:::\n:::\n\n\n### ARIMA(2,0,0) or AR(2) Forecasting\n\n\n::: {.cell}\n\n```{.r .cell-code}\noutput[which.min(output$AIC),] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   p d q P D Q      AIC      BIC     AICc\n18 0 0 3 0 0 0 525.4438 535.1029 526.7771\n```\n:::\n\n```{.r .cell-code}\noutput[which.min(output$BIC),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   p d q P D Q      AIC      BIC     AICc\n36 2 0 0 0 0 0 525.9075 533.6348 526.7771\n```\n:::\n\n```{.r .cell-code}\noutput[which.min(output$AICc),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   p d q P D Q      AIC      BIC     AICc\n36 2 0 0 0 0 0 525.9075 533.6348 526.7771\n```\n:::\n\n```{.r .cell-code}\nset.seed(1234)\n\nmodel_outputar2 <- capture.output(sarima(res.fit, 2,0,0, 0,0,0))\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/fcast2-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncat(model_outputar2[30:62], model_outputar2[length(model_outputar2)], sep = \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nconverged\n$fit\n\nCall:\narima(x = xdata, order = c(p, d, q), seasonal = list(order = c(P, D, Q), period = S), \n    xreg = xmean, include.mean = FALSE, transform.pars = trans, fixed = fixed, \n    optim.control = list(trace = trc, REPORT = 1, reltol = tol))\n\nCoefficients:\n         ar1      ar2    xmean\n      1.3542  -0.6186  13.0780\ns.e.  0.1634   0.1684  22.8472\n\nsigma^2 estimated as 1443:  log likelihood = -258.95,  aic = 525.91\n\n$degrees_of_freedom\n[1] 48\n\n$ttable\n      Estimate      SE t.value p.value\nar1     1.3542  0.1634  8.2894  0.0000\nar2    -0.6186  0.1684 -3.6727  0.0006\nxmean  13.0780 22.8472  0.5724  0.5697\n\n$AIC\n[1] 10.31191\n\n$AICc\n[1] 10.32192\n\n$BIC\n[1] 10.46343\n```\n:::\n\n```{.r .cell-code}\narimaModel_1 <- arima(res.fit, order = c(2,0,0))\nforecast1=predict(arimaModel_1, 5)\n# create df with fcast preds and +-1.96 SE for 95% CI Bands\nfarimax_df <- data.frame(\n  Year = 2021:2025,\n  fcst = as.numeric(forecast1$pred),\n  lower = as.numeric(forecast1$pred - 1.96 * forecast1$se),\n  upper = as.numeric(forecast1$pred + 1.96 * forecast1$se)\n)\n\n#plot(forecast1$pred, main = \"ARIMA(2,0,0) Forecast For 5 Years\", xlab = \"Time\", ylab = \"Values\", col = \"red\")\n(arimax_plot <- ggplot(data=farimax_df, aes(x=Year, y=fcst, group = 1)) +\n    geom_line(aes(color=\"Forecast\"), linewidth=1) +\n    geom_ribbon(aes(ymin=lower, ymax=upper, fill=\"Confidence Interval\"), alpha=0.1) +\n    labs(title=\"ARIMA(2,0,0) Forecasts for Number of Yearly Attacks from 2021 to 2025\",\n         y=\"Number of Terrorist Attacks\",\n         color=\"\", fill=\"\",\n         caption=\"Data Sources: Global Terrorism Database, Department of Homeland Security, SIPRI Military Expenditure Database, Yahoo Finance\") +\n    scale_color_manual(values = c(\"Forecast\"=\"red\")) +\n    scale_fill_manual(values = c(\"95% Confidence Interval\"=\"steelblue\")) +\n    theme_minimal() + \n  theme(plot.caption.position = \"plot\", plot.caption = element_text(size=8)))\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/fcast2-2.png){width=672}\n:::\n:::\n\n\n## Manual ARIMAX Modeling (2001-2020: Post-9/11 Attacks)\n\n\nThe ARIMAX model being analyzed in this section is:\n\n<center>Number of yearly terrorist attacks in the US \\~ Number of yearly B-1 visa entrants + Number of yearly B-2 visa entrants + Number of yearly F-1 visa entrants + Yearly US Military Expenditure as Percentage of US GDP + Raytheon Technologies' Last Yearly Closing Price + Lockheed Martin's Last Yearly Closing Price</center>\n\n\\\n&nbsp;\n\nIts output is as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngtd_USA_2 <- gtd %>% \n            filter(country_txt==\"United States\")\n\n# drop 33 observations from a total of 3121 observations (if taking for '70)\ngtd_USA_2 <- gtd_USA_2[complete.cases(gtd_USA_2$Date),]\n\n# impute missing values for nkill (Total Number of Fatalities: victims and attackers) as 0\n\ngtd_USA_2$nkill[is.na(gtd_USA_2$nkill)] <- 0\n\n# select desired columns for analysis (num_casualties ~ num_attacks, state, attack_type, weapon_type, victim_type, )\ngtd_USA_2 <- subset(gtd_USA_2, select=c(Date, nkill))\n\n# new dataframe for monthly number of attacks 1970-2020\ngtd_yearly_attacks_deaths <- gtd_USA_2 %>% \n              group_by(year(Date)) %>% \n                  summarise(nkill=sum(nkill),\n                            num_attacks = n())\n\ncolnames(gtd_yearly_attacks_deaths)[1] =\"Year\"\ncolnames(gtd_yearly_attacks_deaths)[2] =\"num_fatal\"\ncolnames(gtd_yearly_attacks_deaths)[3] =\"num_attacks\"\n\ngtd_yearly_attacks_deaths$Year <- as.Date(paste0(gtd_yearly_attacks_deaths$Year, \"-12-31\"))\n\n# Fill missing dates (0 attacks for those dates)\ngtd_yearly_attacks_deaths <- gtd_yearly_attacks_deaths %>% \n              complete(Year = seq.Date(min(Year), max(Year), by=\"year\")) \n\n# impute 28 ATTACKS in 1993 and 21 casualties in 1993 as per GTD\ngtd_yearly_attacks_deaths[24,2] <- 28\ngtd_yearly_attacks_deaths[24,3] <- 21\n\n# CLEAN DHS df\n## convert year to date time\ndhs$Year <- as.Date(paste(dhs$Year, \"-12-31\", sep = \"\"), format = \"%Y-%m-%d\")\n\n## subset\ndhs <- subset(dhs, select = c(Year, Temporaryvisitorsforpleasure, Temporaryvisitorsforbusiness, Students))\n\n# join with aggregated GTD df \ngtd_dhs <- merge(gtd_yearly_attacks_deaths, dhs, by = \"Year\", all.x = TRUE)\n\n# interpolate NAs in DHS columns (1970 to 1980, 1982 to 84, 86 to 88)\ngtd_dhs[,4] <- imputeTS::na.interpolation(gtd_dhs[,4])\ngtd_dhs[,5] <- imputeTS::na.interpolation(gtd_dhs[,5])\ngtd_dhs[,6] <- imputeTS::na.interpolation(gtd_dhs[,6])\n\n# join sipri dataset -> military expenditure as % of GDP\nmilexp.gdp <- sipri_gdp %>% filter(Country=='United States of America')\nmilexp.gdp <- melt(milexp.gdp, id.vars = 'Country', variable.name = 'Year', value.name = 'GDP') \nmilexp.gdp <- as.numeric(milexp.gdp[22:72, 3])\ngtd_dhs_sipri <- cbind(gtd_dhs, milexp.gdp) \n#gtd_dhs_sipri[32,2] <- 10 # subtracting 3004 number of casualties (9/11 attacks -> outlier event)\n#gtd_dhs_sipri[32,3] <- 43 # subtracting 4 attacks (9/11 attacks -> outlier event)\n\n# Collecting Raytheon Tech Stock Price (only one active since 70's)\n\noptions(\"getSymbols.warning4.0\"=FALSE)\noptions(\"getSymbols.yahoo.warning\"=FALSE)\n\ntickers = c(\"RTX\")\nfor (i in tickers){\n  getSymbols(i,\n             from = \"1970-01-01\",\n             to = \"2021-12-31\")}\n\nrtx <- data.frame(RTX$RTX.Adjusted)\n\nrtx <- data.frame(rtx,rownames(rtx))\ncolnames(rtx) <- append(tickers,'Dates')\n\nrtx$date<-as.Date(rtx$Dates,\"%Y-%m-%d\")\n\nrtx_yearly <- rtx %>% \n  filter(format(date, \"%m-%d\") == \"12-31\") %>% \n  group_by(Year=year(date)) %>% \n  summarise(RTX = last(RTX))\n\nrtx_yearly$Year <- as.Date(paste0(rtx_yearly$Year, \"-12-31\"))\n\n# Fill missing dates \nrtx_yearly <- rtx_yearly %>% \n              complete(Year = seq.Date(min(Year), max(Year), by=\"year\")) \n\nrtx_yearly$RTX <- imputeTS::na.interpolation(rtx_yearly$RTX)\n\n# join \n\ngtd_dhs_sipri_rtx <- cbind(gtd_dhs_sipri, rtx_yearly$RTX) \n\n# LMT \n\ntickers = c(\"LMT\")\nfor (i in tickers){\n  getSymbols(i,\n             from = \"2001-09-11\",\n             to = \"2021-12-31\")}\n\nlmt <- data.frame(LMT$LMT.Adjusted)\n\nlmt <- data.frame(lmt,rownames(lmt))\ncolnames(lmt) <- append(tickers,'Dates')\n\nlmt$date<-as.Date(lmt$Dates,\"%Y-%m-%d\")\n\nlmt_yearly <- lmt %>% \n  filter(format(date, \"%m-%d\") == \"12-31\") %>% \n  group_by(Year=year(date)) %>% \n  summarise(LMT = last(LMT))\n\nlmt_yearly$Year <- as.Date(paste0(lmt_yearly$Year, \"-12-31\"))\n\n# Fill missing dates \nlmt_yearly <- lmt_yearly %>% \n              complete(Year = seq.Date(min(Year), max(Year), by=\"year\")) \n\nlmt_yearly$LMT <- imputeTS::na.interpolation(lmt_yearly$LMT)\n\n# filter gtd_hds_sipri_rtx\n\ngtd_dhs_sipri_rtx <- gtd_dhs_sipri_rtx %>% slice(32:n())\n\n# final join to create final arimax dataset\n\ngtd_dhs_sipri_rtx_lmt <- cbind(gtd_dhs_sipri_rtx, lmt_yearly$LMT) \n\n# rename cols\n\ncolnames(gtd_dhs_sipri_rtx_lmt)[c(4, 5, 8, 9)] <- c(\"Pleasure\", \"Business\", \"RTX\", \"LMT\")\n\n# convert df to matrix\n\nts_matrix <- as.matrix(gtd_dhs_sipri_rtx_lmt[, 2:9])\n\n# convert the matrix to a time series object with a yearly frequency \nvar_ts <- ts(ts_matrix, frequency = 1,\n                 start = 2001)\n```\n:::\n\n\n### Regression Summary and Fitting ARIMA to Residuals\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit.reg <- lm(num_attacks ~ . - num_fatal, data = var_ts)\n\nsummary(fit.reg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = num_attacks ~ . - num_fatal, data = var_ts)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-17.810  -5.474   1.472   4.598  12.926 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  1.076e+02  2.997e+01   3.591  0.00329 ** \nPleasure     1.516e-07  1.311e-06   0.116  0.90970    \nBusiness    -8.943e-06  7.019e-06  -1.274  0.22496    \nStudents     2.584e-05  1.892e-05   1.366  0.19506    \nmilexp.gdp  -1.339e+03  6.769e+02  -1.978  0.06955 .  \nRTX         -1.423e+00  5.071e-01  -2.807  0.01482 *  \nLMT          4.516e-01  7.941e-02   5.687 7.46e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.824 on 13 degrees of freedom\nMultiple R-squared:  0.9305,\tAdjusted R-squared:  0.8984 \nF-statistic:    29 on 6 and 13 DF,  p-value: 8.375e-07\n```\n:::\n\n```{.r .cell-code}\nres.fit<-ts(residuals(fit.reg),star=decimal_date(as.Date(\"1970-01-01\",format = \"%Y-%m-%d\")),frequency = 1)\n\n############## Then look at the residuals ############\nres.fit %>% ggtsdisplay() # no need to difference\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/regres-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#q=1,3 Q=1 , p=1,2, P=1,2\n#write a funtion\nSARIMA.c=function(p1,p2,q1,q2,P1,P2,Q1,Q2,d1,d2,data){\n  \n  temp=c()\n  d=0\n  D=0\n  s=12\n  \n  i=1\n  temp= data.frame()\n  ls=matrix(rep(NA,9*44),nrow=44)\n  \n  \n  for (p in p1:p2)\n  {\n    for(q in q1:q2)\n    {\n      for(P in P1:P2)\n      {\n        for(Q in Q1:Q2)\n        {\n          for(d in d1:d2)\n       \n        {\n          if(p+d+q+P+D+Q<=8)\n          {\n            \n            model<- Arima(data,order=c(p-1,d,q-1),seasonal=c(P-1,D,Q-1))\n            ls[i,]= c(p-1,d,q-1,P-1,D,Q-1,model$aic,model$bic,model$aicc)\n            i=i+1\n            #print(i)\n            \n          }\n          \n        }\n      }\n    }\n    \n  }\n  \n  }\n  temp= as.data.frame(ls)\n  names(temp)= c(\"p\",\"d\",\"q\",\"P\",\"D\",\"Q\",\"AIC\",\"BIC\",\"AICc\")\n  \n  temp\n  \n}\n\n##q=1,2 Q=0 , p=1,2 P=0 d=0\n\noutput=SARIMA.c(p1=1,p2=3,q1=1,q2=4,P1=1,P2=3,Q1=1,Q2=2,d1=0,d2=0,data=res.fit)\noutput\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   p d q P D Q      AIC      BIC     AICc\n1  0 0 0 0 0 0 139.2404 141.2318 139.9463\n2  0 0 0 0 0 1 139.2404 141.2318 139.9463\n3  0 0 0 1 0 0 139.2404 141.2318 139.9463\n4  0 0 0 1 0 1 139.2404 141.2318 139.9463\n5  0 0 0 2 0 0 139.2404 141.2318 139.9463\n6  0 0 0 2 0 1 139.2404 141.2318 139.9463\n7  0 0 1 0 0 0 134.8791 137.8663 136.3791\n8  0 0 1 0 0 1 134.8791 137.8663 136.3791\n9  0 0 1 1 0 0 134.8791 137.8663 136.3791\n10 0 0 1 1 0 1 134.8791 137.8663 136.3791\n11 0 0 1 2 0 0 134.8791 137.8663 136.3791\n12 0 0 1 2 0 1 134.8791 137.8663 136.3791\n13 0 0 2 0 0 0 135.9981 139.9810 138.6647\n14 0 0 2 0 0 1 135.9981 139.9810 138.6647\n15 0 0 2 1 0 0 135.9981 139.9810 138.6647\n16 0 0 2 1 0 1 135.9981 139.9810 138.6647\n17 0 0 2 2 0 0 135.9981 139.9810 138.6647\n18 0 0 3 0 0 0 135.7986 140.7772 140.0843\n19 0 0 3 0 0 1 135.7986 140.7772 140.0843\n20 0 0 3 1 0 0 135.7986 140.7772 140.0843\n21 1 0 0 0 0 0 138.0040 140.9912 139.5040\n22 1 0 0 0 0 1 138.0040 140.9912 139.5040\n23 1 0 0 1 0 0 138.0040 140.9912 139.5040\n24 1 0 0 1 0 1 138.0040 140.9912 139.5040\n25 1 0 0 2 0 0 138.0040 140.9912 139.5040\n26 1 0 0 2 0 1 138.0040 140.9912 139.5040\n27 1 0 1 0 0 0 135.7757 139.7587 138.4424\n28 1 0 1 0 0 1 135.7757 139.7587 138.4424\n29 1 0 1 1 0 0 135.7757 139.7587 138.4424\n30 1 0 1 1 0 1 135.7757 139.7587 138.4424\n31 1 0 1 2 0 0 135.7757 139.7587 138.4424\n32 1 0 2 0 0 0 137.7740 142.7527 142.0597\n33 1 0 2 0 0 1 137.7740 142.7527 142.0597\n34 1 0 2 1 0 0 137.7740 142.7527 142.0597\n35 1 0 3 0 0 0 135.0720 141.0464 141.5336\n36 2 0 0 0 0 0 139.9897 143.9726 142.6564\n37 2 0 0 0 0 1 139.9897 143.9726 142.6564\n38 2 0 0 1 0 0 139.9897 143.9726 142.6564\n39 2 0 0 1 0 1 139.9897 143.9726 142.6564\n40 2 0 0 2 0 0 139.9897 143.9726 142.6564\n41 2 0 1 0 0 0 141.0728 146.0514 145.3585\n42 2 0 1 0 0 1 141.0728 146.0514 145.3585\n43 2 0 1 1 0 0 141.0728 146.0514 145.3585\n44 2 0 2 0 0 0 138.4103 144.3847 144.8719\n```\n:::\n:::\n\n\n### ARIMA(0,0,1) or MA(1) Forecasting\n\n\n::: {.cell}\n\n```{.r .cell-code}\noutput[which.min(output$AIC),] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  p d q P D Q      AIC      BIC     AICc\n7 0 0 1 0 0 0 134.8791 137.8663 136.3791\n```\n:::\n\n```{.r .cell-code}\noutput[which.min(output$BIC),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  p d q P D Q      AIC      BIC     AICc\n7 0 0 1 0 0 0 134.8791 137.8663 136.3791\n```\n:::\n\n```{.r .cell-code}\noutput[which.min(output$AICc),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  p d q P D Q      AIC      BIC     AICc\n7 0 0 1 0 0 0 134.8791 137.8663 136.3791\n```\n:::\n\n```{.r .cell-code}\nset.seed(1234)\n\nmodel_outputma2 <- capture.output(sarima(res.fit, 0,0,1,0,0,0))\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/fcast-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncat(model_outputma2[115:143], model_outputma2[length(model_outputar2)], sep = \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nconverged\n$fit\n\nCall:\narima(x = xdata, order = c(p, d, q), seasonal = list(order = c(P, D, Q), period = S), \n    xreg = xmean, include.mean = FALSE, transform.pars = trans, fixed = fixed, \n    optim.control = list(trace = trc, REPORT = 1, reltol = tol))\n\nCoefficients:\n          ma1    xmean\n      -1.0000  -0.2769\ns.e.   0.1542   0.2027\n\nsigma^2 estimated as 31.62:  log likelihood = -64.44,  aic = 134.88\n\n$degrees_of_freedom\n[1] 18\n\n$ttable\n      Estimate     SE t.value p.value\nma1    -1.0000 0.1542 -6.4859  0.0000\nxmean  -0.2769 0.2027 -1.3662  0.1887\n\n$AIC\n[1] 6.743957\n\n$AICc\n[1] 6.779251\n\niter  62 value 1.578778\n```\n:::\n\n```{.r .cell-code}\narimaModel_1 <- arima(res.fit, order = c(0,0,1))\nforecast1=predict(arimaModel_1, 5)\n# create df with fcast preds and +-1.96 SE for 95% CI Bands\nfarimax_df <- data.frame(\n  Year = 2021:2025,\n  fcst = as.numeric(forecast1$pred),\n  lower = as.numeric(forecast1$pred - 1.96 * forecast1$se),\n  upper = as.numeric(forecast1$pred + 1.96 * forecast1$se)\n)\n\n#plot(forecast1$pred, main = \"ARIMA(2,0,0) Forecast For 5 Years\", xlab = \"Time\", ylab = \"Values\", col = \"red\")\n(arimax_plot <- ggplot(data=farimax_df, aes(x=Year, y=fcst, group = 1)) +\n    geom_line(aes(color=\"Forecast\"), linewidth=1) +\n    geom_ribbon(aes(ymin=lower, ymax=upper, fill=\"Confidence Interval\"), alpha=0.1) +\n    labs(title=\"ARIMA(0,0,1) Forecasts for Number of Yearly Attacks from 2021 to 2025\",\n         y=\"Number of Terrorist Attacks\",\n         color=\"\", fill=\"\",\n         caption=\"Data Sources: Global Terrorism Database, Department of Homeland Security, SIPRI Military Expenditure Database, Yahoo Finance\") +\n    scale_color_manual(values = c(\"Forecast\"=\"red\")) +\n    scale_fill_manual(values = c(\"95% Confidence Interval\"=\"steelblue\")) +\n    theme_minimal() + \n  theme(plot.caption.position = \"plot\", plot.caption = element_text(size=8)))\n```\n\n::: {.cell-output-display}\n![](ARIMAX-SARIMAX-VAR_files/figure-html/fcast-2.png){width=672}\n:::\n:::\n\n\n## Final Results\n\nThe VAR(1) Model trained on Post-9/11 Attacks data is the best performing model in terms of the predicted forecast. It is the only model that took into account the latter observations in its prediction and predicted based on that increasing trend. Our hypothesis that non-immigrants do not significantly affect the number of yearly terrorist attacks in the US is, therefore, proven through the above analyses. \n\nThe ARIMAX model trained on all the years performed significantly worse than the ARIMAX model trained on only Post-9/11 Attacks years. In fact, when adding in Lockheed Martin's stock price in segment 2 of the analysis (Post-9/11 Attacks), $Adjusted.R^2$ increases by more than 60% from segment 1 of the analysis, which includes all years (1970-2020) and not Lockheed Martin's stock price! Although that is the case, none of the predicted forecasts from the ARIMAX models are not as convincing as the VAR models. Moreover, in the ARIMAX models, all the non-immigration variables collected from DHS are non-significant, apart from Pleasure or B-2 Visa entrants in segment 1 (all years included) of the analysis.\n\nIn summary, the years prior to the 9/11 Attacks have little to no effect on the forecasts for 2021 to 2025. To gain more accurate forecasts from the VAR model, it is imperative to focus on data post-9/11. The variables that do imply high correlation (determining causation is out of scope of this analysis) to forecasting the yearly number of terrorist attacks in the US are US Military Expenditure both directly on armed forces and weapons contractors, Lockheed Martin and Raytheon Technologies.  \n\n## Section Code\n\n**Code for this section can be found [here](https://github.com/TegveerG/Time-Series-Project/blob/main/Time%20Series%20Analysis/ARIMAX-SARIMAX-VAR.qmd)**",
    "supporting": [
      "ARIMAX-SARIMAX-VAR_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.10.1/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
fig <- fig %>% layout(title = 'Select Non-Immigrant Admissions 2002-2021',
yaxis=list(title = 'Number of Admissions (in millions)'))
fig
grouped_year_states <- gtd_USA %>%
group_by(year(Date), provstate) %>%
summarize(state = n())
colnames(grouped_year_targets)[1] ="Year"
colnames(grouped_year_targets)[2] ="State"
View(grouped_year_states)
sum(is.na(grouped_year_states))
write.csv(grouped_year_weapons, "../Data/Grouped_Year_States.csv")
grouped_year_states <- gtd_USA %>%
group_by(year(Date), provstate) %>%
summarize(state = n())
colnames(grouped_year_states)[1] ="Year"
colnames(grouped_year_states)[2] ="State"
write.csv(grouped_year_states, "../Data/Grouped_Year_States.csv")
View(grouped_year_states)
grouped_year_states <- gtd_USA %>%
group_by(year(Date), provstate) %>%
summarize(attacks = n())
colnames(grouped_year_states)[1] ="Year"
colnames(grouped_year_states)[2] ="State"
write.csv(grouped_year_states, "../Data/Grouped_Year_States.csv")
View(grouped_year_states)
gglagplot(monthly_attacks)
gglagplot(monthly_attacks, do.lines = FALSE)
decompose_monthly_attacks = decompose(monthly_attacks, "additive")
autoplot(decompose_monthly_attacks)
decompose_monthly_attacks = decompose(monthly_attacks, "multiplicative")
autoplot(decompose_monthly_attacks)
adf.test(monthly_attacks)
adf.test(monthly_deaths)
View(sipri_region)
plot_ly(data=gtd_monthly_attacks_deaths, x=~Date)  %>%
add_trace(type = 'scatter', mode = 'lines', y=~num_attacks,
name="Attacks", line = list(color = 'red')) %>%
layout(title="Monthly Count of Terrorist Attacks in the US",
yaxis=list(title=("Count")),
xaxis=list(title=("Date"))) %>%
layout(hovermode = "x")
library(flipbookr)
library(tidyverse)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(padr)
adf.test(sipri_usa_ts)
decompose_sipri_usa = decompose(sipri_usa_ts, "additive")
View(gtd_monthly_attacks_deaths)
gtd <- readxl::read_xlsx("../Data/gtd.xlsx")
sipri_gdp <- readxl::read_xlsx("../Data/SIPRI_GDP.xlsx")
sipri_region <- readxl::read_xlsx("../Data/SIPRI_Region.xlsx")
dhs <- readxl::read_xls("../Data/DHS_98_21.xls")
# if the exact day/month of the event is unknown, this is recorded as “0”
gtd$Date <- as.Date(with(gtd,paste(iyear,imonth,iday,sep="-")),"%Y-%m-%d")
# results in 891 NAs total, 33 of which correspond to country_txt==USA
gtd <- pad(gtd$Date)
# if the exact day/month of the event is unknown, this is recorded as “0”
gtd$Date <- as.Date(with(gtd,paste(iyear,imonth,iday,sep="-")),"%Y-%m-%d")
# results in 891 NAs total, 33 of which correspond to country_txt==USA
gtd <- pad(gtd)
# if the exact day/month of the event is unknown, this is recorded as “0”
gtd$Date <- as.Date(with(gtd,paste(iyear,imonth,iday,sep="-")),"%Y-%m-%d")
# results in 891 NAs total, 33 of which correspond to country_txt==USA
gtd <- pad(gtd, by="Date")
# Filter country_txt==USA
gtd_USA <- gtd %>%
filter(country_txt=="United States")
# drop 33 observations from a total of 3121 observations (if taking for '70)
gtd_USA <- gtd_USA[complete.cases(gtd_USA$Date),]
# impute missing values for nkill (Total Number of Fatalities: victims and attackers) as 0
gtd_USA$nkill[is.na(gtd_USA$nkill)] <- 0
# select desired columns for analysis
gtd_USA <- gtd_USA %>%
select(Date, provstate, city,
attacktype1_txt, targtype1_txt,
gname, nkill, nkillus, weaptype1_txt)
# new dataframe for monthly number of attacks 1970-2020
gtd_monthly_attacks_deaths <- gtd_USA %>%
group_by(year(Date), month(Date)) %>%
summarise(num_attacks = n(),
nkill=sum(nkill))
colnames(gtd_monthly_attacks_deaths)[1] ="Year"
colnames(gtd_monthly_attacks_deaths)[2] ="Month"
colnames(gtd_monthly_attacks_deaths)[4] ="num_fatal"
gtd_monthly_attacks_deaths$Date <- as.Date(paste0(gtd_monthly_attacks_deaths$Year, "-", gtd_monthly_attacks_deaths$Month, "-01"), "%Y-%m-%d")
#as.Date(with(gtd_monthly_attacks_deaths,paste(Year,Month,sep="-")),"%Y-%m")
# Fill missing dates (0 attacks for those dates)
gtd_monthly_attacks_deaths <- gtd_monthly_attacks_deaths %>%
complete(Date = seq.Date(min(Date), max(Date), by="month"))
gtd_monthly_attacks_deaths <- pad(gtd_monthly_attacks_deaths) %>%
replace(is.na(.), 0)
View(gtd_monthly_attacks_deaths)
View(gtd_USA)
gtd %>% filter(year(Date)==1993)
View(gtd)
gtd_monthly_attacks_deaths <- pad(gtd_monthly_attacks_deaths, by="Date")
gtd <- readxl::read_xlsx("../Data/gtd.xlsx")
sipri_gdp <- readxl::read_xlsx("../Data/SIPRI_GDP.xlsx")
sipri_region <- readxl::read_xlsx("../Data/SIPRI_Region.xlsx")
dhs <- readxl::read_xls("../Data/DHS_98_21.xls")
# if the exact day/month of the event is unknown, this is recorded as “0”
gtd$Date <- as.Date(with(gtd,paste(iyear,imonth,iday,sep="-")),"%Y-%m-%d")
# results in 891 NAs total, 33 of which correspond to country_txt==USA
#gtd <- pad(gtd, by="Date")
# Filter country_txt==USA
gtd_USA <- gtd %>%
filter(country_txt=="United States")
gtd_USA <- pad(gtd_USA, by="Date")
# drop 33 observations from a total of 3121 observations (if taking for '70)
#gtd_USA <- gtd_USA[complete.cases(gtd_USA$Date),]
# impute missing values for nkill (Total Number of Fatalities: victims and attackers) as 0
gtd_USA$nkill[is.na(gtd_USA$nkill)] <- 0
# select desired columns for analysis
gtd_USA <- gtd_USA %>%
select(Date, provstate, city,
attacktype1_txt, targtype1_txt,
gname, nkill, nkillus, weaptype1_txt)
# new dataframe for monthly number of attacks 1970-2020
gtd_monthly_attacks_deaths <- gtd_USA %>%
group_by(year(Date), month(Date)) %>%
summarise(num_attacks = n(),
nkill=sum(nkill))
colnames(gtd_monthly_attacks_deaths)[1] ="Year"
colnames(gtd_monthly_attacks_deaths)[2] ="Month"
colnames(gtd_monthly_attacks_deaths)[4] ="num_fatal"
gtd_monthly_attacks_deaths$Date <- as.Date(paste0(gtd_monthly_attacks_deaths$Year, "-", gtd_monthly_attacks_deaths$Month, "-01"), "%Y-%m-%d")
#as.Date(with(gtd_monthly_attacks_deaths,paste(Year,Month,sep="-")),"%Y-%m")
# Fill missing dates (0 attacks for those dates)
gtd_monthly_attacks_deaths <- gtd_monthly_attacks_deaths %>%
complete(Date = seq.Date(min(Date), max(Date), by="month"))
View(gtd_monthly_attacks_deaths)
# Filter country_txt==USA
gtd_USA <- gtd %>%
filter(country_txt=="United States")
# drop 33 observations from a total of 3121 observations (if taking for '70)
gtd_USA <- gtd_USA[complete.cases(gtd_USA$Date),]
# impute missing values for nkill (Total Number of Fatalities: victims and attackers) as 0
gtd_USA$nkill[is.na(gtd_USA$nkill)] <- 0
# select desired columns for analysis
gtd_USA <- gtd_USA %>%
select(Date, provstate, city,
attacktype1_txt, targtype1_txt,
gname, nkill, nkillus, weaptype1_txt)
# new dataframe for monthly number of attacks 1970-2020
gtd_monthly_attacks_deaths <- gtd_USA %>%
group_by(year(Date), month(Date)) %>%
summarise(num_attacks = n(),
nkill=sum(nkill))
colnames(gtd_monthly_attacks_deaths)[1] ="Year"
colnames(gtd_monthly_attacks_deaths)[2] ="Month"
colnames(gtd_monthly_attacks_deaths)[4] ="num_fatal"
gtd_monthly_attacks_deaths$Date <- as.Date(paste0(gtd_monthly_attacks_deaths$Year, "-", gtd_monthly_attacks_deaths$Month, "-01"), "%Y-%m-%d")
#as.Date(with(gtd_monthly_attacks_deaths,paste(Year,Month,sep="-")),"%Y-%m")
# Fill missing dates (0 attacks for those dates)
gtd_monthly_attacks_deaths <- gtd_monthly_attacks_deaths %>%
complete(Date = seq.Date(min(Date), max(Date), by="month"))
gtd_monthly_attacks_deaths <- pad(gtd_monthly_attacks_deaths, by="Date") %>%
replace(is.na(.), 0)
View(gtd_monthly_attacks_deaths)
gtd_monthly_attacks_deaths <- pad(gtd_monthly_attacks_deaths, by="Date")
gtd_monthly_attacks_deaths <- subset(gtd_monthly_attacks_deaths, select=-c(Year, Month))
gtd_monthly_attacks_deaths <- pad(gtd_monthly_attacks_deaths, by="Date")
View(gtd_monthly_attacks_deaths)
# Filter country_txt==USA
gtd_USA <- gtd %>%
filter(country_txt=="United States")
# drop 33 observations from a total of 3121 observations (if taking for '70)
gtd_USA <- gtd_USA[complete.cases(gtd_USA$Date),]
# impute missing values for nkill (Total Number of Fatalities: victims and attackers) as 0
gtd_USA$nkill[is.na(gtd_USA$nkill)] <- 0
# select desired columns for analysis
gtd_USA <- gtd_USA %>%
select(Date, provstate, city,
attacktype1_txt, targtype1_txt,
gname, nkill, nkillus, weaptype1_txt)
# new dataframe for monthly number of attacks 1970-2020
gtd_monthly_attacks_deaths <- gtd_USA %>%
group_by(year(Date), month(Date)) %>%
summarise(num_attacks = n(),
nkill=sum(nkill))
colnames(gtd_monthly_attacks_deaths)[1] ="Year"
colnames(gtd_monthly_attacks_deaths)[2] ="Month"
colnames(gtd_monthly_attacks_deaths)[4] ="num_fatal"
gtd_monthly_attacks_deaths$Date <- as.Date(paste0(gtd_monthly_attacks_deaths$Year, "-", gtd_monthly_attacks_deaths$Month, "-01"), "%Y-%m-%d")
#as.Date(with(gtd_monthly_attacks_deaths,paste(Year,Month,sep="-")),"%Y-%m")
# Fill missing dates (0 attacks for those dates)
gtd_monthly_attacks_deaths <- gtd_monthly_attacks_deaths %>%
complete(Date = seq.Date(min(Date), max(Date), by="month"))
#gtd_monthly_attacks_deaths <- pad(gtd_monthly_attacks_deaths, by="Date") %>%
#replace(is.na(.), 0)
gtd_monthly_attacks_deaths <- subset(gtd_monthly_attacks_deaths, select=-c(Year, Month))
gtd_monthly_attacks_deaths <- pad(gtd_monthly_attacks_deaths, by="Date")
gtd_monthly_attacks_deaths$Date[277:288]
gtd_monthly_attacks_deaths$num_attacks <- ifelse(gtd_monthly_attacks_deaths$year(Date) != 1993 & is.na(gtd_monthly_attacks_deaths$num_attacks), 0, gtd_monthly_attacks_deaths$num_attacks)
gtd_monthly_attacks_deaths$num_attacks <- ifelse(year(gtd_monthly_attacks_deaths$Date) != 1993 & is.na(gtd_monthly_attacks_deaths$num_attacks), 0, gtd_monthly_attacks_deaths$num_attacks)
attacks_interp <- approx(gtd_monthly_attacks_deaths$Date[265:276], gtd_monthly_attacks_deaths$num_attacks[265:276], xout = 1:12)$y + approx(gtd_monthly_attacks_deaths$Date[289:300], gtd_monthly_attacks_deaths$num_attacks[289:300], xout = 1:12)$y / 2
str(gtd_monthly_attacks_deaths)
attacks_interp <- approx(gtd_monthly_attacks_deaths$num_attacks[265:276], xout = 1:12)$y + approx(gtd_monthly_attacks_deaths$num_attacks[289:300], xout = 1:12)$y / 2
round(attacks_interp,1)
round(attacks_interp,2)
round(attacks_interp,0)
monthly_attacks <- ts(gtd_monthly_attacks_deaths$num_attacks, start = c(1970, 1), frequency = 12)
ts_attacks_interp <- na.approx(monthly_attacks)
# Extract the interpolated values for year 1993
attacks_interp <- ts_attacks_interp["1993"]
attacks_interp
ts_attacks_interp
attacks_interp <- ts_attacks_interp[1993]
attacks_interp
ts_attacks_interp[1]
ts_attacks_interp["1993"]
ts_attacks_interp[277:288]
ts_attacks_interp[289:300]
sum(round(ts_attacks_interp[277:288],0))
gtd_monthly_attacks_deaths$num_attacks[277:288] <- ts_attacks_interp
gtd_monthly_attacks_deaths$num_attacks[277:288]
gtd_monthly_attacks_deaths$num_attacks[277:288] <- sum(round(ts_attacks_interp[277:288],0)))
gtd_monthly_attacks_deaths$num_attacks[277:288] <- sum(round(ts_attacks_interp[277:288],0))
View(gtd_monthly_attacks_deaths)
gtd_monthly_attacks_deaths$num_attacks[277:288] <- round(ts_attacks_interp[277:288],0)
# Filter country_txt==USA
gtd_USA <- gtd %>%
filter(country_txt=="United States")
# drop 33 observations from a total of 3121 observations (if taking for '70)
gtd_USA <- gtd_USA[complete.cases(gtd_USA$Date),]
# impute missing values for nkill (Total Number of Fatalities: victims and attackers) as 0
gtd_USA$nkill[is.na(gtd_USA$nkill)] <- 0
# select desired columns for analysis
gtd_USA <- gtd_USA %>%
select(Date, provstate, city,
attacktype1_txt, targtype1_txt,
gname, nkill, nkillus, weaptype1_txt)
# new dataframe for monthly number of attacks 1970-2020
gtd_monthly_attacks_deaths <- gtd_USA %>%
group_by(year(Date), month(Date)) %>%
summarise(num_attacks = n(),
nkill=sum(nkill))
colnames(gtd_monthly_attacks_deaths)[1] ="Year"
colnames(gtd_monthly_attacks_deaths)[2] ="Month"
colnames(gtd_monthly_attacks_deaths)[4] ="num_fatal"
gtd_monthly_attacks_deaths$Date <- as.Date(paste0(gtd_monthly_attacks_deaths$Year, "-", gtd_monthly_attacks_deaths$Month, "-01"), "%Y-%m-%d")
# Fill missing dates (0 attacks for those dates)
gtd_monthly_attacks_deaths <- gtd_monthly_attacks_deaths %>%
complete(Date = seq.Date(min(Date), max(Date), by="month"))
gtd_monthly_attacks_deaths <- subset(gtd_monthly_attacks_deaths, select=-c(Year, Month))
# create 1993 months -> returns NA's for num_attacks and num_fatal
gtd_monthly_attacks_deaths <- pad(gtd_monthly_attacks_deaths, by="Date")
# interpolating 1993 monthly attacks values (as per GTD only 28 attacks took place)
# fill in NAs with 0 for all years except 1993
gtd_monthly_attacks_deaths$num_attacks <- ifelse(year(gtd_monthly_attacks_deaths$Date) != 1993 & is.na(gtd_monthly_attacks_deaths$num_attacks), 0, gtd_monthly_attacks_deaths$num_attacks)
# method 1 of interpolation: 58 estimated total attacks in 1993
attacks_interp <- approx(gtd_monthly_attacks_deaths$num_attacks[265:276], xout = 1:12)$y + approx(gtd_monthly_attacks_deaths$num_attacks[289:300], xout = 1:12)$y / 2
# method 2 using zoo library: 54 estimated total attacks in 1993 so we use this
# first create time series object of num_attacks
monthly_attacks_ts <- ts(gtd_monthly_attacks_deaths$num_attacks, start = c(1970, 1), frequency = 12)
ts_attacks_interp <- na.approx(monthly_attacks) # approximate year 1993 NAs
# round and add up to see how many attacks estimated by approx()
cat("Number of attacks estimated for 1993: ", sum(round(ts_attacks_interp[277:288],0)))
# impute use these values in original dataframe
gtd_monthly_attacks_deaths$num_attacks[277:288] <- round(ts_attacks_interp[277:288],0)
View(gtd_monthly_attacks_deaths)
plot_ly(data=gtd_monthly_attacks_deaths, x=~Date)  %>%
add_trace(type = 'scatter', mode = 'lines', y=~num_attacks,
name="Attacks", line = list(color = 'red')) %>%
layout(title="Monthly Count of Terrorist Attacks in the US",
yaxis=list(title=("Count")),
xaxis=list(title=("Date"))) %>%
layout(hovermode = "x")
monthly_attacks_ts <- ts(gtd_monthly_attacks_deaths$num_attacks, start = c(1970, 1), frequency = 12)
autoplot(monthly_attacks_ts)
monthly_attacks_ts %>% ggtsdisplay()
adf.test(monthly_attacks_ts)
gglagplot(monthly_attacks_ts)
gglagplot(monthly_attacks_ts, do.lines = FALSE)
plot_ly(data=gtd_monthly_attacks_deaths, x=~Date)  %>%
add_trace(type = 'scatter', mode = 'lines', y=~num_attacks,
name="Attacks", line = list(color = 'red')) %>%
layout(title="Monthly Count of Terrorist Attacks in the US",
yaxis=list(title=("Count")),
xaxis=list(title=("Date"))) %>%
layout(hovermode = "x")
ggseasonplot(monthly_attacks_ts)
# convert to time series object again
monthly_attacks_ts <- ts(gtd_monthly_attacks_deaths$num_attacks, start = c(1970, 1), frequency = 12)
# plot
gglagplot(monthly_attacks_ts, do.lines=FALSE)+
ggtitle("Lag Plot for Monthly Terrorist Attacks, 1970-2020") +
xlab("Lags") + ylab("Yt") +
theme(axis.text.x=element_text(angle=45, hjust=1))
# convert to time series object again
monthly_attacks_ts <- ts(gtd_monthly_attacks_deaths$num_attacks, start = c(1970, 1), frequency = 12)
# plot
gglagplot(monthly_attacks_ts, do.lines=FALSE)+
ggtitle("Lag Plot for Monthly Terrorist Attacks, 1970-2020") +
xlab("Lags") + ylab("Yt") +
theme(axis.text.x=element_text(angle=45, hjust=1))
stl(monthly_attacks_ts, t.window=NULL, s.window="periodic", robust=TRUE) %>%
autoplot()+ggtitle("Additive Decomposition of Number of Terrorist Attacks")
additive_monthly_attacks_ts = decompose(monthly_attacks_ts, "additive")
autoplot(additive_monthly_attacks_ts)
stl(monthly_attacks_ts, t.window=NULL, s.window="periodic", robust=TRUE) %>%
autoplot()+ggtitle("Additive Decomposition of Number of Terrorist Attacks")
stl(monthly_attacks_ts, t.window=NULL, s.window="periodic", robust=TRUE) %>%
autoplot()+ggtitle("Additive Decomposition of Number of Terrorist Attacks")
autoplot(additive_monthly_attacks_ts)
monthly_attacks_ts %>% ggtsdisplay()
monthly_attacks_ts %>% ggtsdisplay()
adf.test(monthly_attacks_ts)
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
monthly_attacks_ts %>% diff %>% ggtsdisplay()
monthly_attacks_ts %>% diff %>% ggtsdisplay()
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
(orig_plot <- plot_ly(data=gtd_monthly_attacks_deaths, x=~Date)  %>%
add_trace(type = 'scatter', mode = 'lines', y=~num_attacks,
name="Attacks", line = list(color = 'red')) %>%
layout(title="Monthly Count of Terrorist Attacks in the US",
yaxis=list(title=("Count")),
xaxis=list(title=("Date"))) %>%
layout(hovermode = "x"))
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
grid.arrange(detrended, orig_plot, nrow=2)
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
grid.arrange(detrended, orig_plot, nrow=2, top="")
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
grid.arrange(detrended, orig_plot, ncol=2)
library(flipbookr)
library(tidyverse)
library(ggplot2)
library(forecast)
library(astsa)
library(xts)
library(tseries)
library(fpp2)
library(fma)
library(lubridate)
library(tidyverse)
library(TSstudio)
library(quantmod)
library(tidyquant)
library(plotly)
library(ggplot2)
library(padr)
library(gridExtra)
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
grid.arrange(detrended, orig_plot, ncol=2)
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
orig_plot
par(mfrow = c(1, 1))
#grid.arrange(detrended, orig_plot, ncol=2)
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
orig_plot
par(mfrow = c(1, 2))
#grid.arrange(detrended, orig_plot, ncol=2)
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
detrended
orig_plot
par(mfrow = c(1, 2))
#grid.arrange(detrended, orig_plot, ncol=2)
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
detrended
orig_plot
par(mfrow = c(2, 1))
#grid.arrange(detrended, orig_plot, ncol=2)
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
subplot(detrended, orig_plot, nrows = 2, heights = c(0.7, 0.3))
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
subplot(detrended, orig_plot, nrows = 2, heights = c(0.7, 0.7))
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
subplot(detrended, orig_plot, nrows = 2, heights = c(0.5, 0.5))
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
#subplot(detrended, orig_plot, nrows = 2, heights = c(0.5, 0.5))
grid.arrange(detrended,orig_plot, ncol = 1)
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
subplot(detrended, orig_plot, nrows = 2, heights = c(0.5, 0.5))
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
par(mfrow = c(1, 2))
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
orig_plot
#subplot(detrended, orig_plot, nrows = 2, heights = c(0.5, 0.5))
par(mfrow = c(1, 2))
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
orig_plot
fit <- lm(monthly_attacks_ts~time(monthly_attacks_ts), na.action = NULL)
summary(fit)
par(mfrow = c(1, 2))
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
orig_plot
par(mfrow = c(1, 2))
#subplot(detrended, orig_plot, nrows = 2, heights = c(0.5, 0.5))
par(mfrow = c(1, 2))
detrended <- autoplot(resid(fit),
main="Detrended: Monthly Terrorist Attacks in the US",
ylab = "Residuals",
xlab = "Date") +
theme_minimal()
orig_plot
par(mfrow = c(1, 2))

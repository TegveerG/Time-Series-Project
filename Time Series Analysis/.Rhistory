ticklen = 10,          # set the length of the tick lines
tickwidth = 1,         # set the width of the tick lines
tickcolor = "black",   # set the color of the tick lines
tickprefix = "   "     # add padding before the tick labels
),
yaxis = list(title = "")
)
# display plot
fig
# create scatterplot matrix using plotly
fig <- plot_ly(
data = gtd_dhs_sipri_rtx,
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Casualties", values = ~num_fatal),
list(label = "# Attacks", values = ~num_attacks),
list(label = "B-2 Visa", values = ~Pleasure),
list(label = "B-1 Visa", values = ~Business),
list(label = "F-1 Visa", values = ~Students),
list(label = "RTX", values = ~RTX)
)
) %>%
layout(hovermode = "x")
# customize layout
fig <- fig %>%
layout(
title = "Scatterplot Matrix of VAR Model Variables (Pre and Post-9/11)",
xaxis = list(
title = "",
tickvals = c(1:6),
ticktext = c("# Casualties", "# Attacks", "B-2 Visa", "B-1 Visa", "F-1 Visa", "RTX"),
tickangle = -45,
tickmode = "array",    # set the tick mode to "array" to allow for custom tick text
tickfont = list(size = 10),  # set the font size of the tick labels
side = "bottom",       # place x-axis labels on the bottom of the plot
ticklen = 10,          # set the length of the tick lines
tickwidth = 1,         # set the width of the tick lines
tickcolor = "black",   # set the color of the tick lines
tickprefix = "   "     # add padding before the tick labels
),
yaxis = list(title = "")
)
# display plot
fig
# create scatterplot matrix using plotly
fig <- plot_ly(
data = var_ts,
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Casualties", values = ~num_fatal),
list(label = "# Attacks", values = ~num_attacks),
list(label = "# Attacks", values = ~num_attacks),
list(label = "B-2 Visa", values = ~Pleasure),
list(label = "B-1 Visa", values = ~Business),
list(label = "F-1 Visa", values = ~Students),
list(label = "RTX", values = ~RTX),
list(label = "LMT", values = ~LMT)
)
) %>%
layout(hovermode = "x")
# create scatterplot matrix using plotly
fig <- plot_ly(
data = as.data.frame(var_ts),
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Casualties", values = ~num_fatal),
list(label = "# Attacks", values = ~num_attacks),
list(label = "# Attacks", values = ~num_attacks),
list(label = "B-2 Visa", values = ~Pleasure),
list(label = "B-1 Visa", values = ~Business),
list(label = "F-1 Visa", values = ~Students),
list(label = "RTX", values = ~RTX),
list(label = "LMT", values = ~LMT)
)
) %>%
layout(hovermode = "x")
# customize layout
fig <- fig %>%
layout(
title = "Scatterplot Matrix of VAR Model Variables (Pre and Post-9/11)",
xaxis = list(
title = "",
tickvals = c(1:6),
ticktext = c("# Casualties", "# Attacks", "B-2 Visa", "B-1 Visa", "F-1 Visa", "RTX"),
tickangle = -45,
tickmode = "array",    # set the tick mode to "array" to allow for custom tick text
tickfont = list(size = 10),  # set the font size of the tick labels
side = "bottom",       # place x-axis labels on the bottom of the plot
ticklen = 10,          # set the length of the tick lines
tickwidth = 1,         # set the width of the tick lines
tickcolor = "black",   # set the color of the tick lines
tickprefix = "        "     # add padding before the tick labels
),
yaxis = list(title = "")
)
# display plot
fig
# create scatterplot matrix using plotly
fig <- plot_ly(
data = as.data.frame(var_ts),
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Casualties", values = ~num_fatal),
list(label = "# Attacks", values = ~num_attacks),
list(label = "RTX", values = ~RTX),
list(label = "LMT", values = ~LMT)
)
) %>%
layout(hovermode = "x")
# customize layout
fig <- fig %>%
layout(
title = "Scatterplot Matrix of VAR Model Variables (Pre and Post-9/11)",
xaxis = list(
title = "",
tickvals = c(1:6),
ticktext = c("# Casualties", "# Attacks", "B-2 Visa", "B-1 Visa", "F-1 Visa", "RTX"),
tickangle = -45,
tickmode = "array",    # set the tick mode to "array" to allow for custom tick text
tickfont = list(size = 10),  # set the font size of the tick labels
side = "bottom",       # place x-axis labels on the bottom of the plot
ticklen = 10,          # set the length of the tick lines
tickwidth = 1,         # set the width of the tick lines
tickcolor = "black",   # set the color of the tick lines
tickprefix = "        "     # add padding before the tick labels
),
yaxis = list(title = "")
)
# display plot
fig
# create scatterplot matrix using plotly
fig <- plot_ly(
data = as.data.frame(var_ts),
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Casualties", values = ~num_fatal),
list(label = "# Attacks", values = ~num_attacks),
list(label = "RTX", values = ~RTX),
list(label = "LMT", values = ~LMT)
)
) %>%
layout(hovermode = "x")
# customize layout
fig <- fig %>%
layout(
title = "Scatterplot Matrix of VAR Model Variables (Post-9/11)",
xaxis = list(
title = "",
tickvals = c(1:6),
ticktext = c("# Casualties", "# Attacks", "B-2 Visa", "B-1 Visa", "F-1 Visa", "RTX"),
tickangle = -45,
tickmode = "array",    # set the tick mode to "array" to allow for custom tick text
tickfont = list(size = 10),  # set the font size of the tick labels
side = "bottom",       # place x-axis labels on the bottom of the plot
tickprefix = "  "     # add padding before the tick labels
),
yaxis = list(title = "")
)
# display plot
fig
# create scatterplot matrix using plotly
fig <- plot_ly(
data = as.data.frame(var_ts),
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Casualties", values = ~num_fatal),
list(label = "# Attacks", values = ~num_attacks),
list(label = "RTX", values = ~RTX),
list(label = "LMT", values = ~LMT)
)
) %>%
layout(hovermode = "x")
# customize layout
# fig <- fig %>%
#   layout(
#     title = "Scatterplot Matrix of VAR Model Variables (Post-9/11)",
#     xaxis = list(
#       title = "",
#       tickvals = c(1:6),
#       ticktext = c("# Casualties", "# Attacks", "B-2 Visa", "B-1 Visa", "F-1 Visa", "RTX"),
#       tickangle = -45,
#       tickmode = "array",    # set the tick mode to "array" to allow for custom tick text
#       tickfont = list(size = 10),  # set the font size of the tick labels
#       side = "bottom",       # place x-axis labels on the bottom of the plot
#       tickprefix = "  "     # add padding before the tick labels
#     ),
#     yaxis = list(title = "")
#   )
fig <- fig %>%
layout(
title = "Scatterplot Matrix of VAR Model Variables (Post-9/11)",
xaxis = list(title = ""),
yaxis = list(title = "")
)
# display plot
fig
tickers = c("LMT")
for (i in tickers){
getSymbols(i,
from = "2001-09-11",
to = "2021-12-31")}
lmt <- data.frame(LMT$LMT.Adjusted)
lmt <- data.frame(lmt,rownames(lmt))
colnames(lmt) <- append(tickers,'Dates')
lmt$date<-as.Date(lmt$Dates,"%Y-%m-%d")
lmt_yearly <- lmt %>%
filter(format(date, "%m-%d") == "12-31") %>%
group_by(Year=year(date)) %>%
summarise(LMT = last(LMT))
lmt_yearly$Year <- as.Date(paste0(lmt_yearly$Year, "-12-31"))
# Fill missing dates
lmt_yearly <- lmt_yearly %>%
complete(Year = seq.Date(min(Year), max(Year), by="year"))
lmt_yearly$LMT <- imputeTS::na.interpolation(lmt_yearly$LMT)
# filter gtd_hds_sipri_rtx
gtd_dhs_sipri_rtx <- gtd_dhs_sipri_rtx %>% slice(32:n())
# final join to create final VAR dataset
gtd_dhs_sipri_rtx_lmt <- cbind(gtd_dhs_sipri_rtx, lmt_yearly$LMT)
# rename cols
colnames(gtd_dhs_sipri_rtx_lmt)[9] <- c("LMT")
ts_matrix <- as.matrix(gtd_dhs_sipri_rtx_lmt[, c(3,7,8,9)])
# convert the matrix to a time series object with a yearly frequency
var_ts <- ts(ts_matrix, frequency = 1,
start = 2001)
plot.ts(var_ts , main = "", xlab = "")
# create scatterplot matrix using plotly
fig <- plot_ly(
data = as.data.frame(var_ts),
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Attacks", values = ~num_attacks),
list(label = "Military Exp", values = ~num_attacks),
list(label = "RTX", values = ~RTX),
list(label = "LMT", values = ~LMT)
)
) %>%
layout(hovermode = "x")
# customize layout
# fig <- fig %>%
#   layout(
#     title = "Scatterplot Matrix of VAR Model Variables (Post-9/11)",
#     xaxis = list(
#       title = "",
#       tickvals = c(1:6),
#       ticktext = c("# Casualties", "# Attacks", "B-2 Visa", "B-1 Visa", "F-1 Visa", "RTX"),
#       tickangle = -45,
#       tickmode = "array",    # set the tick mode to "array" to allow for custom tick text
#       tickfont = list(size = 10),  # set the font size of the tick labels
#       side = "bottom",       # place x-axis labels on the bottom of the plot
#       tickprefix = "  "     # add padding before the tick labels
#     ),
#     yaxis = list(title = "")
#   )
fig <- fig %>%
layout(
title = "Scatterplot Matrix of VAR Model Variables (Post-9/11)",
xaxis = list(title = ""),
yaxis = list(title = "")
)
# display plot
fig
# Filter country_txt==USA
gtd_USA_2 <- gtd %>%
filter(country_txt=="United States")
# drop 33 observations from a total of 3121 observations (if taking for '70)
gtd_USA_2 <- gtd_USA_2[complete.cases(gtd_USA_2$Date),]
# impute missing values for nkill (Total Number of Fatalities: victims and attackers) as 0
gtd_USA_2$nkill[is.na(gtd_USA_2$nkill)] <- 0
# select desired columns for analysis (num_casualties ~ num_attacks, state, attack_type, weapon_type, victim_type, )
gtd_USA_2 <- subset(gtd_USA_2, select=c(Date, nkill))
# new dataframe for monthly number of attacks 1970-2020
gtd_yearly_attacks_deaths <- gtd_USA_2 %>%
group_by(year(Date)) %>%
summarise(nkill=sum(nkill),
num_attacks = n())
colnames(gtd_yearly_attacks_deaths)[1] ="Year"
colnames(gtd_yearly_attacks_deaths)[2] ="num_fatal"
colnames(gtd_yearly_attacks_deaths)[3] ="num_attacks"
gtd_yearly_attacks_deaths$Year <- as.Date(paste0(gtd_yearly_attacks_deaths$Year, "-12-31"))
# Fill missing dates (0 attacks for those dates)
gtd_yearly_attacks_deaths <- gtd_yearly_attacks_deaths %>%
complete(Year = seq.Date(min(Year), max(Year), by="year"))
# impute 28 ATTACKS in 1993 and 21 casualties in 1993 as per GTD
gtd_yearly_attacks_deaths[24,2] <- 28
gtd_yearly_attacks_deaths[24,3] <- 21
# CLEAN DHS df
## convert year to date time
dhs$Year <- as.Date(paste(dhs$Year, "-12-31", sep = ""), format = "%Y-%m-%d")
## subset
dhs <- subset(dhs, select = c(Year, Temporaryvisitorsforpleasure, Temporaryvisitorsforbusiness, Students))
# join with aggregated GTD df
gtd_dhs <- merge(gtd_yearly_attacks_deaths, dhs, by = "Year", all.x = TRUE)
# interpolate NAs in DHS columns (1970 to 1980, 1982 to 84, 86 to 88)
gtd_dhs[,4] <- imputeTS::na.interpolation(gtd_dhs[,4])
gtd_dhs[,5] <- imputeTS::na.interpolation(gtd_dhs[,5])
gtd_dhs[,6] <- imputeTS::na.interpolation(gtd_dhs[,6])
# join sipri dataset -> military expenditure as % of GDP
milexp.gdp <- sipri_gdp %>% filter(Country=='United States of America')
milexp.gdp <- melt(milexp.gdp, id.vars = 'Country', variable.name = 'Year', value.name = 'GDP')
milexp.gdp <- as.numeric(milexp.gdp[22:72, 3])
gtd_dhs_sipri <- cbind(gtd_dhs, milexp.gdp)
#gtd_dhs_sipri[32,2] <- 10 # subtracting 3004 number of casualties (9/11 attacks -> outlier event)
#gtd_dhs_sipri[32,3] <- 43 # subtracting 4 attacks (9/11 attacks -> outlier event)
# Collecting Raytheon Tech Stock Price (only one active since 70's)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
tickers = c("RTX")
for (i in tickers){
getSymbols(i,
from = "1970-01-01",
to = "2021-12-31")}
rtx <- data.frame(RTX$RTX.Adjusted)
rtx <- data.frame(rtx,rownames(rtx))
colnames(rtx) <- append(tickers,'Dates')
rtx$date<-as.Date(rtx$Dates,"%Y-%m-%d")
rtx_yearly <- rtx %>%
filter(format(date, "%m-%d") == "12-31") %>%
group_by(Year=year(date)) %>%
summarise(RTX = last(RTX))
rtx_yearly$Year <- as.Date(paste0(rtx_yearly$Year, "-12-31"))
# Fill missing dates
rtx_yearly <- rtx_yearly %>%
complete(Year = seq.Date(min(Year), max(Year), by="year"))
rtx_yearly$RTX <- imputeTS::na.interpolation(rtx_yearly$RTX)
# final join to create final VAR dataset
gtd_dhs_sipri_rtx <- cbind(gtd_dhs_sipri, rtx_yearly$RTX)
# rename cols
colnames(gtd_dhs_sipri_rtx)[c(4, 5, 8)] <- c("Pleasure", "Business", "RTX")
# convert df to matrix
ts_matrix <- as.matrix(gtd_dhs_sipri_rtx[, 2:8])
# convert the matrix to a time series object with a yearly frequency
var_ts <- ts(ts_matrix, frequency = 1,
start = 1970)
View(var_ts)
# Filter country_txt==USA
gtd_USA_2 <- gtd %>%
filter(country_txt=="United States")
# drop 33 observations from a total of 3121 observations (if taking for '70)
gtd_USA_2 <- gtd_USA_2[complete.cases(gtd_USA_2$Date),]
# impute missing values for nkill (Total Number of Fatalities: victims and attackers) as 0
gtd_USA_2$nkill[is.na(gtd_USA_2$nkill)] <- 0
# select desired columns for analysis (num_casualties ~ num_attacks, state, attack_type, weapon_type, victim_type, )
gtd_USA_2 <- subset(gtd_USA_2, select=c(Date, nkill))
# new dataframe for monthly number of attacks 1970-2020
gtd_yearly_attacks_deaths <- gtd_USA_2 %>%
group_by(year(Date)) %>%
summarise(nkill=sum(nkill),
num_attacks = n())
colnames(gtd_yearly_attacks_deaths)[1] ="Year"
colnames(gtd_yearly_attacks_deaths)[2] ="num_fatal"
colnames(gtd_yearly_attacks_deaths)[3] ="num_attacks"
gtd_yearly_attacks_deaths$Year <- as.Date(paste0(gtd_yearly_attacks_deaths$Year, "-12-31"))
# Fill missing dates (0 attacks for those dates)
gtd_yearly_attacks_deaths <- gtd_yearly_attacks_deaths %>%
complete(Year = seq.Date(min(Year), max(Year), by="year"))
# impute 28 ATTACKS in 1993 and 21 casualties in 1993 as per GTD
gtd_yearly_attacks_deaths[24,2] <- 28
gtd_yearly_attacks_deaths[24,3] <- 21
# CLEAN DHS df
## convert year to date time
dhs$Year <- as.Date(paste(dhs$Year, "-12-31", sep = ""), format = "%Y-%m-%d")
## subset
dhs <- subset(dhs, select = c(Year, Temporaryvisitorsforpleasure, Temporaryvisitorsforbusiness, Students))
# join with aggregated GTD df
gtd_dhs <- merge(gtd_yearly_attacks_deaths, dhs, by = "Year", all.x = TRUE)
# interpolate NAs in DHS columns (1970 to 1980, 1982 to 84, 86 to 88)
gtd_dhs[,4] <- imputeTS::na.interpolation(gtd_dhs[,4])
gtd_dhs[,5] <- imputeTS::na.interpolation(gtd_dhs[,5])
gtd_dhs[,6] <- imputeTS::na.interpolation(gtd_dhs[,6])
# join sipri dataset -> military expenditure as % of GDP
milexp.gdp <- sipri_gdp %>% filter(Country=='United States of America')
milexp.gdp <- melt(milexp.gdp, id.vars = 'Country', variable.name = 'Year', value.name = 'GDP')
milexp.gdp <- as.numeric(milexp.gdp[22:72, 3])
gtd_dhs_sipri <- cbind(gtd_dhs, milexp.gdp)
#gtd_dhs_sipri[32,2] <- 10 # subtracting 3004 number of casualties (9/11 attacks -> outlier event)
#gtd_dhs_sipri[32,3] <- 43 # subtracting 4 attacks (9/11 attacks -> outlier event)
# Collecting Raytheon Tech Stock Price (only one active since 70's)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
tickers = c("RTX")
for (i in tickers){
getSymbols(i,
from = "1970-01-01",
to = "2021-12-31")}
rtx <- data.frame(RTX$RTX.Adjusted)
rtx <- data.frame(rtx,rownames(rtx))
colnames(rtx) <- append(tickers,'Dates')
rtx$date<-as.Date(rtx$Dates,"%Y-%m-%d")
rtx_yearly <- rtx %>%
filter(format(date, "%m-%d") == "12-31") %>%
group_by(Year=year(date)) %>%
summarise(RTX = last(RTX))
rtx_yearly$Year <- as.Date(paste0(rtx_yearly$Year, "-12-31"))
# Fill missing dates
rtx_yearly <- rtx_yearly %>%
complete(Year = seq.Date(min(Year), max(Year), by="year"))
rtx_yearly$RTX <- imputeTS::na.interpolation(rtx_yearly$RTX)
# final join to create final VAR dataset
gtd_dhs_sipri_rtx <- cbind(gtd_dhs_sipri, rtx_yearly$RTX)
# rename cols
colnames(gtd_dhs_sipri_rtx)[c(4, 5, 8)] <- c("Pleasure", "Business", "RTX")
# convert df to matrix
ts_matrix <- as.matrix(gtd_dhs_sipri_rtx[, 3:8])
# convert the matrix to a time series object with a yearly frequency
var_ts <- ts(ts_matrix, frequency = 1,
start = 1970)
plot.ts(var_ts , main = "", xlab = "")
# create scatterplot matrix using plotly
fig <- plot_ly(
data = as.data.frame(var_ts),
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Attacks", values = ~num_attacks),
list(label = "B-2 Visa", values = ~Pleasure),
list(label = "B-1 Visa", values = ~Business),
list(label = "F-1 Visa", values = ~Students),
list(label = "Military Exp", values = ~milexp.gdp),
list(label = "RTX", values = ~RTX)
)
) %>%
layout(hovermode = "x")
# customize layout
fig <- fig %>%
layout(
title = "Scatterplot Matrix of VAR Model Variables (Post-9/11)",
xaxis = list(title = ""),
yaxis = list(title = "")
)
# display plot
fig
# create scatterplot matrix using plotly
fig <- plot_ly(
data = as.data.frame(var_ts),
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Attacks", values = ~num_attacks),
list(label = "B-2 Visa", values = ~Pleasure),
list(label = "B-1 Visa", values = ~Business),
list(label = "F-1 Visa", values = ~Students),
list(label = "Military Exp", values = ~milexp.gdp),
list(label = "RTX", values = ~RTX)
)
) %>%
layout(hovermode = "x")
# customize layout
fig <- fig %>%
layout(
title = "Scatterplot Matrix of VAR Model Variables (Pre and Post-9/11)",
xaxis = list(title = ""),
yaxis = list(title = "")
)
# display plot
fig
tickers = c("LMT")
for (i in tickers){
getSymbols(i,
from = "2001-09-11",
to = "2021-12-31")}
lmt <- data.frame(LMT$LMT.Adjusted)
lmt <- data.frame(lmt,rownames(lmt))
colnames(lmt) <- append(tickers,'Dates')
lmt$date<-as.Date(lmt$Dates,"%Y-%m-%d")
lmt_yearly <- lmt %>%
filter(format(date, "%m-%d") == "12-31") %>%
group_by(Year=year(date)) %>%
summarise(LMT = last(LMT))
lmt_yearly$Year <- as.Date(paste0(lmt_yearly$Year, "-12-31"))
# Fill missing dates
lmt_yearly <- lmt_yearly %>%
complete(Year = seq.Date(min(Year), max(Year), by="year"))
lmt_yearly$LMT <- imputeTS::na.interpolation(lmt_yearly$LMT)
# filter gtd_hds_sipri_rtx
gtd_dhs_sipri_rtx <- gtd_dhs_sipri_rtx %>% slice(32:n())
# final join to create final VAR dataset
gtd_dhs_sipri_rtx_lmt <- cbind(gtd_dhs_sipri_rtx, lmt_yearly$LMT)
# rename cols
colnames(gtd_dhs_sipri_rtx_lmt)[9] <- c("LMT")
ts_matrix <- as.matrix(gtd_dhs_sipri_rtx_lmt[, c(3,7,8,9)])
# convert the matrix to a time series object with a yearly frequency
var_ts <- ts(ts_matrix, frequency = 1,
start = 2001)
View(var_ts)
# create scatterplot matrix using plotly
fig <- plot_ly(
data = as.data.frame(var_ts),
type = "splom",
diagonal = list(visible = FALSE),
dimensions = list(
list(label = "# Attacks", values = ~num_attacks),
list(label = "Military Exp", values = ~milexp.gdp),
list(label = "RTX", values = ~RTX),
list(label = "LMT", values = ~LMT)
)
) %>%
layout(hovermode = "x")
fig <- fig %>%
layout(
title = "Scatterplot Matrix of VAR Model Variables (Post-9/11)",
xaxis = list(title = ""),
yaxis = list(title = "")
)
# display plot
fig
